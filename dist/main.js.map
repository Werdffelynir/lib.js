{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Arr.js","webpack:///./src/components/Chain.js","webpack:///./src/components/Component.js","webpack:///./src/components/Cookie.js","webpack:///./src/components/Datetime.js","webpack:///./src/components/Dom.js","webpack:///./src/components/KeyboardManager.js","webpack:///./src/components/Loader.js","webpack:///./src/components/Router.js","webpack:///./src/components/Roxy.js","webpack:///./src/components/RoxyListener.js","webpack:///./src/components/Storage.js","webpack:///./src/components/Str.js","webpack:///./src/components/Timer.js","webpack:///./src/components/Transform.js","webpack:///./src/index.js","webpack:///./src/static/abc.js","webpack:///./src/static/attr.js","webpack:///./src/static/clone.js","webpack:///./src/static/convertHEXtoRGB.js","webpack:///./src/static/convertRGBtoHEX.js","webpack:///./src/static/copy.js","webpack:///./src/static/createElement.js","webpack:///./src/static/createFragment.js","webpack:///./src/static/css.js","webpack:///./src/static/cssInject.js","webpack:///./src/static/decodeGetQuery.js","webpack:///./src/static/defined.js","webpack:///./src/static/domLoaded.js","webpack:///./src/static/each.js","webpack:///./src/static/encodeGetQuery.js","webpack:///./src/static/exists.js","webpack:///./src/static/extend.js","webpack:///./src/static/find.js","webpack:///./src/static/format.js","webpack:///./src/static/getDocument.js","webpack:///./src/static/getLocation.js","webpack:///./src/static/getWindow.js","webpack:///./src/static/hasLowerCase.js","webpack:///./src/static/httpRequest.js","webpack:///./src/static/inject.js","webpack:///./src/static/isBoolean.js","webpack:///./src/static/isDefined.js","webpack:///./src/static/isEmpty.js","webpack:///./src/static/isEqualArrays.js","webpack:///./src/static/isFunction.js","webpack:///./src/static/isHTMLString.js","webpack:///./src/static/isInteger.js","webpack:///./src/static/isLowerCase.js","webpack:///./src/static/isNode.js","webpack:///./src/static/isNumber.js","webpack:///./src/static/isObject.js","webpack:///./src/static/isRegExp.js","webpack:///./src/static/isString.js","webpack:///./src/static/isUpperCase.js","webpack:///./src/static/loadBlobfile.js","webpack:///./src/static/loadCSS.js","webpack:///./src/static/loadJS.js","webpack:///./src/static/loadJSON.js","webpack:///./src/static/loadJSSync.js","webpack:///./src/static/max.js","webpack:///./src/static/merge.js","webpack:///./src/static/middleNumber.js","webpack:///./src/static/min.js","webpack:///./src/static/node2str.js","webpack:///./src/static/number2string.js","webpack:///./src/static/on.js","webpack:///./src/static/position.js","webpack:///./src/static/positionMouse.js","webpack:///./src/static/query.js","webpack:///./src/static/queryAll.js","webpack:///./src/static/radiansToDegrees.js","webpack:///./src/static/random.js","webpack:///./src/static/range.js","webpack:///./src/static/redirect.js","webpack:///./src/static/search.js","webpack:///./src/static/shuffleArray.js","webpack:///./src/static/sprintf.js","webpack:///./src/static/str2fragment.js","webpack:///./src/static/str2node.js","webpack:///./src/static/stylizer.js","webpack:///./src/static/sum.js","webpack:///./src/static/toArray.js","webpack:///./src/static/toCamelCase.js","webpack:///./src/static/toMap.js","webpack:///./src/static/toMinusCase.js","webpack:///./src/static/toObject.js","webpack:///./src/static/toSnakeCase.js","webpack:///./src/static/toXML.js","webpack:///./src/static/trim.js","webpack:///./src/static/trimSymbols.js","webpack:///./src/static/typeOf.js","webpack:///./src/static/typeOfStrict.js","webpack:///./src/static/uniqArray.js","webpack:///./src/static/uri.js","webpack:///./src/static/values.js","webpack:///./src/static/wait.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;;;ACbnB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,2BAA2B;AAC/D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACjGrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACJ;AACF;AACE;AACF;AACE;AACY;AACd;;;AAGpC;AACA;AACA;AACA,SAAS;AACT;AACA,YAAY;AACZ,UAAU;AACV,cAAc;AACd,QAAQ;AACR,WAAW;AACX,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,cAAc;AACd,YAAY;AACZ,qBAAqB;AACrB;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED,kBAAkB,IAAI;AACtB,2BAA2B,QAAQ,WAAW,SAAS,OAAO,EAAE;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6BAA6B,sDAAM;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,6DAAK;AAChC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gBAAgB,8DAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oEAAY;AAChC,2BAA2B,gEAAQ;AACnC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,oEAAY;AACpD,gCAAgC,gEAAQ;AACxC,aAAa;AACb,gCAAgC,6DAAK;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,8DAAM;;AAEtB;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA,0DAA0D,8DAAM;;AAEhE;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,6DAAK;AAChB;AACA,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA,sBAAsB;AACtB,wBAAwB;AACxB,0BAA0B;AAC1B,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA,gCAAgC;AAChC;AACA;AACA,sBAAsB;AACtB;AACA,8BAA8B;AAC9B,kBAAkB;AAClB,KAAK;AACL;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;;;;;;;;;;AC5WzB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,8BAA8B,qCAAqC;AAClF;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO,oBAAoB;AACtC,aAAa,OAAO,4BAA4B,OAAO,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,8BAA8B,qCAAqC;AACtF;AACA;AACA,KAAK;AACL,uBAAuB;AACvB,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AASE;;AAEa,qEAAM,EAAC;;;;;;;;;;;;;AChKtB;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACA;;AAEJ;AACF;AACY;AACN;AACI;AACA;AACJ;AACF;AACM;AACY;AACF;AACtB;AACU;AACE;AACN;;AAEpC;AACA;AACA,kBAAkB,8DAAM;AACxB,kBAAkB,8DAAM,0BAA0B,iEAAQ;AAC1D;AACA;AACA;AACA,KAAK;;AAEL;AACA,YAAY,8DAAM;AAClB,YAAY,iEAAQ;AACpB,SAAS,UAAU,8DAAM;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,gEAAO,UAAU,4DAAI,4BAA4B,4DAAI;AACtF,wCAAwC,8DAAM;AAC9C,4BAA4B,8DAAM;AAClC,kCAAkC,8DAAM;AACxC;AACA;AACA;AACA;AACA,0BAA0B,iEAAQ;AAClC;AACA;AACA,mBAAmB,iEAAQ;AAC3B,mBAAmB,iEAAQ;AAC3B,uBAAuB,iEAAQ;AAC/B,wBAAwB,iEAAQ;AAChC;AACA;AACA;AACA;AACA,QAAQ,2DAAG,OAAO,gFAAgF;AAClG;AACA;AACA;AACA;AACA,QAAQ,2DAAG,OAAO,gBAAgB;AAClC;AACA;AACA;AACA,YAAY,8DAAM;AAClB,YAAY,iEAAQ;AACpB,SAAS,UAAU,8DAAM;AACzB;AACA;AACA;AACA;AACA,+CAA+C,2DAAE;AACjD;AACA;AACA,eAAe,8DAAK,EAAE,+DAA+D;AACrF;AACA;AACA;;AAEA,SAAS,mDAAE;AACX;AACA,WAAW,oDAAI;AACf,UAAU,mDAAG;AACb,aAAa,yDAAS;AACtB,aAAa,sDAAM;AACnB,eAAe,wDAAQ;AACvB,aAAa,sDAAM;AACnB,eAAe,yDAAQ;AACvB,YAAY,qDAAK;AACjB,aAAa,8DAAa;AAC1B,eAAe,+DAAc;AAC7B,eAAe,wDAAQ;AACvB,eAAe,wDAAQ;AACvB,eAAe,yDAAQ;;;AAGR,kEAAG,EAAC;;;;;;;;;;;;;ACnGnB;AAAA;AAAA;AAAA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,oBAAoB,iBAAiB;AACrC,sBAAsB,mBAAmB;AACzC,uBAAuB,oBAAoB;AAC3C;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;;AAGA;AACA;AACA,cAAc,yCAAyC,0DAA0D;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;;;;ACnP/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACrOtB;AAAA;AAAgD;;AAEhD;AACA;AACA;AACA;AACA,sBAAsB,mEAAW;AACjC,0BAA0B,mEAAW;AACrC;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC/BtB;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA,2BAA2B;;;;;AAK3B;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED,YAAY;AACZ,qBAAqB;AACrB,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA,cAAc;;AAEd;;;AAGkC;;AAElC;AACA;AACA;AACA,cAAc,gLAAgL;AAC9L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA,8CAA8C,eAAe,4DAAI;AACjE;;AAEA;AACA,kDAAkD,eAAe,4DAAI;AACrE;;AAEA;AACA,oDAAoD,eAAe,4DAAI;AACvE;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,sCAAsC,4DAAI;AAC1C,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA,aAAa;AACb,wCAAwC;AACxC,2BAA2B,cAAc;;AAEzC,aAAa;AACb;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;;;AAGe,mEAAI,EAAC;;;;;;;;;;;;;AC1KpB;AAAA;AAA0B;;AAE1B;AACA;AACA,kBAAkB,kBAAkB;AACpC,kBAAkB,kBAAkB;AACpC,CAAC;AACD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,kBAAkB;AACvC,qBAAqB,kBAAkB;AACvC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iLAAiL;AAC/L;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL,eAAe,qDAAI;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACjE5B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA,aAAa,QAAQ,uLAAuL;AAC5M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC/GvB;AAAA;AAAA;AAAA;AAAA;AAAsC;AACI;AACA;AACR;;;AAGlC;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,8DAAM;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,wDAAQ;AACvB,eAAe,wDAAQ;AACvB,WAAW,oDAAI;;AAEA,kEAAG,EAAC;;;;;;;;;;;;;AChCnB;AAAA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA,qDAAqD,oBAAoB,QAAQ,EAAE,EAAE;AACrF;AACA;AACA;AACA,YAAY;AACZ;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;AC9DpB;AAAA;AAAA;AAA0C;AACA;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gEAAQ;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD,QAAQ,gEAAQ,WAAW,2BAA2B;AACtD;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACvHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACQ;AACV;AACgB;AACd;AACE;AACkB;AAClB;AACV;AACI;AACoB;AACA;AACtB;AACI;AACN;AACgB;AACN;AACN;AACI;AACJ;AACM;AACM;AACV;AACY;AACR;AACM;AACJ;AACM;AACF;AACd;AACF;AACQ;AACU;AACZ;AACI;AACN;AACyD;AACnC;AACtB;AACM;AACU;AACV;AACZ;AACsB;AACV;AACV;AACkB;AACd;AACJ;AACc;AACJ;AACJ;AACE;AACU;AACF;AACN;AACA;AACA;AACA;AACJ;AACU;AACJ;AACM;AACJ;AACM;AACZ;AACI;AACA;AACN;AACU;AACJ;AACI;AACA;AACV;AACJ;AACuB;AACnB;AACgB;AACpB;AACU;AACU;AACtB;AACsB;AACF;AACR;AACR;AACM;AACI;AACV;AACA;AACQ;AACI;;AAEhC;AACf;AACA,YAAY,wDAAG;AACf,cAAc,yDAAK;AACnB,kBAAkB,6DAAS;AAC3B,eAAe,2DAAM;AACrB,iBAAiB,6DAAQ;AACzB,YAAY,wDAAG;AACf,wBAAwB,mEAAe;AACvC,eAAe,0DAAM;AACrB,eAAe,0DAAM;AACrB,aAAa,wDAAI;AACjB,qBAAqB,gEAAY;AACjC,gBAAgB,4DAAO;AACvB,YAAY,wDAAG;AACf,cAAc,yDAAK;AACnB,kBAAkB,8DAAS;;AAE3B;AACA;AACA,aAAa,mDAAG;AAChB,eAAe,qDAAK;AACpB,yBAAyB,gEAAe;AACxC,yBAAyB,gEAAe;AACxC,uBAAuB,8DAAa;AACpC,wBAAwB,+DAAc;AACtC,aAAa,oDAAG;AAChB,mBAAmB,0DAAS;AAC5B,wBAAwB,+DAAc;AACtC,mBAAmB,0DAAS;AAC5B,cAAc,qDAAI;AAClB,wBAAwB,+DAAc;AACtC,gBAAgB,uDAAM;AACtB,gBAAgB,uDAAM;AACtB,yBAAyB,+DAAe;AACxC,cAAc,qDAAI;AAClB,iBAAiB,qDAAI;AACrB,kBAAkB,qDAAI;AACtB,gBAAgB,uDAAM;AACtB,qBAAqB,4DAAW;AAChC,qBAAqB,4DAAW;AAChC,mBAAmB,0DAAS;AAC5B,qBAAqB,4DAAW;AAChC,gBAAgB,uDAAM;AACtB,mBAAmB,0DAAS;AAC5B,mBAAmB,0DAAS;AAC5B,iBAAiB,wDAAO;AACxB,uBAAuB,8DAAa;AACpC,oBAAoB,2DAAU;AAC9B,sBAAsB,6DAAY;AAClC,mBAAmB,0DAAS;AAC5B,qBAAqB,4DAAW;AAChC,gBAAgB,uDAAM;AACtB,kBAAkB,yDAAQ;AAC1B,kBAAkB,yDAAQ;AAC1B,kBAAkB,yDAAQ;AAC1B,kBAAkB,yDAAQ;AAC1B,qBAAqB,4DAAW;AAChC,sBAAsB,6DAAY;AAClC,iBAAiB,wDAAO;AACxB,gBAAgB,uDAAM;AACtB,kBAAkB,yDAAQ;AAC1B,oBAAoB,2DAAU;AAC9B,aAAa,oDAAG;AAChB,eAAe,sDAAK;AACpB,sBAAsB,6DAAY;AAClC,aAAa,oDAAG;AAChB,kBAAkB,yDAAQ;AAC1B,uBAAuB,8DAAa;AACpC,YAAY,mDAAE;AACd,kBAAkB,yDAAQ;AAC1B,uBAAuB,8DAAa;AACpC,kBAAkB,yDAAQ;AAC1B,eAAe,sDAAK;AACpB,0BAA0B,iEAAgB;AAC1C,gBAAgB,sDAAM;AACtB,qBAAqB,2DAAW;AAChC,oBAAoB,0DAAU;AAC9B,sBAAsB,4DAAY;AAClC,sBAAsB,4DAAY;AAClC,eAAe,sDAAK;AACpB,kBAAkB,yDAAQ;AAC1B,gBAAgB,uDAAM;AACtB,sBAAsB,6DAAY;AAClC,iBAAiB,wDAAO;AACxB,qBAAqB,4DAAW;AAChC,qBAAqB,4DAAW;AAChC,eAAe,sDAAK;AACpB,kBAAkB,yDAAQ;AAC1B,eAAe,sDAAK;AACpB,qBAAqB,4DAAW;AAChC,cAAc,qDAAI;AAClB,qBAAqB,4DAAW;AAChC,gBAAgB,uDAAM;AACtB,sBAAsB,6DAAY;AAClC,aAAa,oDAAG;AAChB,sBAAsB,6DAAY;AAClC,kBAAkB,yDAAQ;AAC1B,kBAAkB,yDAAQ;AAC1B,mBAAmB,0DAAS;AAC5B,iBAAiB,wDAAO;AACxB,aAAa,oDAAG;AAChB,gBAAgB,uDAAM;AACtB,cAAc,qDAAI;AAClB,KAAK;AACL,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrMK;AACA;AACA;AACA;AACA;;AAEQ;AACf;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACbF;AAAA;AAAA;AAAA;AAA4B;AACE;AACA;;;AAG9B;AACA,yBAAyB,uDAAM;AAC/B;AACA,kBAAkB,sDAAK;AACvB;;AAEA,QAAQ,uDAAM;AACd,YAAY,uDAAM;AAClB;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa,uDAAM;AACnB;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACxBpB;AAAA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;;;;ACvBrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gFAAgF,+BAA+B;AAC/G,gCAAgC,EAAE,UAAU,EAAE,UAAU,EAAE;AAC1D,qBAAqB,mFAAmF;AACxG;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;;;;ACX/B;AACA;AACA;;;AAGe,8EAAe,EAAC;;;;;;;;;;;;;ACP/B;AAAA;AAAA;AAA8B;AACA;;;AAG9B;AACA;AACA,QAAQ,uDAAM;AACd;;AAEA;AACA;;AAEA;AACA,sCAAsC;;AAEtC,QAAQ,uDAAM;AACd;AACA;AACA;AACA,4EAA4E;AAC5E,SAAS;AACT;AACA;;AAEA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;AC3BpB;AAAA;AAAA;AAA8B;AACA;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAM,oBAAoB,uDAAM;AACnD,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,yBAAyB,uDAAM;AAC/B;AACA;AACA,0CAA0C,uDAAM;AAChD;AACA;AACA,+BAA+B,gBAAgB;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,sCAAsC;;AAEnF;AACA,8CAA8C,iCAAiC;;AAE/E;AACA;;AAEA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AClD7B;AAAA;AAAA;AAAA;AAA8B;AACA;AACI;;;AAGlC;AACA;;AAEA,QAAQ,uDAAM;AACd;;AAEA,QAAQ,uDAAM;AACd,6BAA6B,yDAAQ;;AAErC;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACjB9B;AAAA;AAAA;AAAA;AAA8B;AACA;AACI;;AAElC;AACA;AACA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,uDAAM;AAC7B,yBAAyB,uDAAM;AAC/B;AACA,oCAAoC;AACpC,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,uBAAuB,yDAAQ;AAC/B;;AAEA;AACA,gBAAgB,uDAAM;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;;;;;;ACnEyB;AACF;AACF;;AAExC;AACA,cAAc,aAAa,yDAAyD,EAAE;AACtF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,wBAAwB,SAAS,EAAE;AACnC;AACA,yBAAyB,6DAAY,SAAS,4DAAW;AACzD;AACA,8BAA8B,KAAK,IAAI,OAAO;AAC9C,SAAS;AACT,uBAAuB;;AAEvB,KAAK;AACL,gBAAgB,8DAAa,YAAY;AACzC;AACA;AACA;;AAEA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;;;AC9BzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;;;ACV9B;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACLvB;AAAA;AAAwC;;;AAGxC;AACA,gBAAgB,4DAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACbzB;AAAA;AAAA;AAAA;AAA8B;AACF;AACE;;AAE9B;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAM;;AAErB;AACA;AACA;AACA;AACA;AACA,gBAAgB,uDAAM;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,uDAAM,wBAAwB,sDAAK;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,uDAAM,wBAAwB,sDAAK;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;;;AC3DpB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;;;ACT9B;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;;;;;;ACHf;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC3BtB;AAAA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,cAAc;AACzB,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;;;;;;AC9BS;AACE;AACE;;;AAGlC;AACA;AACA;AACA;AACA,mBAAmB,EAAE,gBAAgB,EAAE;AACvC;AACA,mBAAmB,KAAK,gBAAgB,KAAK,KAAK,6BAA6B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA,2BAA2B,MAAM;;AAEjC;AACA,YAAY,wDAAO,kBAAkB,uDAAM;AAC3C,2BAA2B,yDAAQ;;AAEnC;AACA,KAAK;AACL;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;;;AChCtB;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;;;ACP3B;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;;;ACP3B;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;;;ACVzB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACV5B;AAAA;AAA8B;;AAE9B;AACA;AACA;AACA,iBAAiB,gBAAgB,0BAA0B;AAC3D;AACA,iBAAiB,4CAA4C,0BAA0B;AACvF;AACA;AACA;AACA;AACA,gBAAgB;AAChB,mBAAmB;AACnB;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,uDAAM;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AChI3B;AAAA;AAAA;AAAA;AAA8B;AACA;AACF;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA,QAAQ,uDAAM;AACd;AACA;AACA,SAAS;AACT;AACA;;AAEA,QAAQ,uDAAM;AACd,mBAAmB,sDAAK;;AAExB;AACA;;AAEA,QAAQ,uDAAM;AACd,YAAY,uDAAM;AAClB;AACA,SAAS,UAAU,uDAAM;AACzB;AACA,uBAAuB,iBAAiB;AACxC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;;;AC/CtB;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;;;ACJxB;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACLzB;AAAA;AAA8B;;;AAG9B;AACA,QAAQ,uDAAM,mBAAmB,uDAAM;AACvC;AACA;AACA;AACA;AACA,KAAK,UAAU,uDAAM;AACrB;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;;;AChBvB;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;;;ACd7B;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACLxB;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;;;ACZ5B;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;;;ACJzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,0EAAW,E;;;;;;;;;;;;;;;ACR1B;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;;;ACRtB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACe,uEAAQ,EAAC;;;;;;;;;;;;;ACTxB;AAAA;AAAgC;;AAEhC;AACA;AACA,SAAS,wDAAO;AAChB;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;;;ACVxB;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;;;ACJxB;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;;;ACJxB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,0EAAW,E;;;;;;;;;;;;;;ACT1B;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,E;;;;;;;;;;;;ACR3B;AAAA;AAAA;AAA8B;AACU;;AAExC;AACA;AACA,QAAQ,uDAAM;AACd,uBAAuB,gBAAgB;AACvC;AACA;AACA,KAAK;AACL,oBAAoB,4DAAW;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACzBvB;AAAA;AAAA;AAA8B;AACU;;AAExC,wBAAwB,4DAAW;AACnC;AACA;AACA,QAAQ,uDAAM;AACd,uBAAuB,gBAAgB;AACvC;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,qEAAM,E;;;;;;;;;;;;;;ACxBrB;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,E;;;;;;;;;;;;;;;;ACPO;AACc;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,QAAQ,uDAAM,oBAAoB,uDAAM;AACxC,YAAY,uDAAM;AAClB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAAa;AACxC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;;;ACvD1B;AACA,4BAA4B;AAC5B;;AAEe,kEAAG,E;;;;;;;;;;;;;;;ACHlB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACxBrB;AAAA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;;;ACJ5B;AACA,4BAA4B;AAC5B;;AAEe,kEAAG,E;;;;;;;;;;;;;;;ACHlB;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;;;;ACPjB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACpB7B;AAAA;AAAA;AAAA;AAAkC;AACJ;AACA;;AAE9B;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA,YAAY,uDAAM;AAClB;AACA,uBAAuB,yDAAQ;AAC/B;AACA;AACA,gBAAgB,uDAAM;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;;AAEe,iEAAE,EAAC;;;;;;;;;;;;;ACjClB;AAAA;;;AAGA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;;;;AC/CxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACd7B;AAAA;AAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,qBAAqB,yDAAQ;AAC7B;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACfrB;AAAA;AAAA;AAAA;AAA8B;AACA;AACU;;AAExC,YAAY,4DAAW;;AAEvB;AACA;AACA;AACA;AACA,oDAAoD,kBAAkB;AACtE,oDAAoD,kBAAkB;AACtE;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA,QAAQ,uDAAM;AACd;;AAEA,QAAQ,uDAAM;AACd;AACA;AACA;;AAEA;AACA,uCAAuC,gCAAgC,WAAW;;AAElF;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;;;ACpCxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACXhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa;AACb;AACmC;;;AAG5B;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA,iBAAiB,wCAAG,GAAG,4CAAO;AAC9B,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;;;AAGe,qEAAM,E;;;;;;;;;;;;;;ACvErB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGe,oEAAK,EAAC;;;;;;;;;;;;;AClBrB;AAAA;AAAA;AAAwC;AACA;;;AAGxC;AACA,gBAAgB,4DAAW;AAC3B,gBAAgB,4DAAW;AAC3B;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACVxB;AAAA;AAAA;AAAA;AAA8B;AACI;AACN;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAM,gBAAgB,sDAAK;AACtC;AACA;AACA,qBAAqB;AACrB,wBAAwB,yDAAQ;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;;;;AC7CtB;AACA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACb5B;AAAA;AACA;AACA,oBAAoB,EAAE,kBAAkB,EAAE;AAC1C;AACA;AACA,aAAa;AACb;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;;;ACfvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACjB5B;AAAA;AAA0C;;AAE1C;AACA;AACA,mBAAmB,6DAAY;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;;;AClBxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;;;ACRxB;AACA;AACA;AACA,wCAAwC,oBAAoB,EAAE;AAC9D;;AAEe,kEAAG,E;;;;;;;;;;;;ACPlB;AAAA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,+CAA+C;AAC/C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;;;ACvCvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEe,0EAAW,E;;;;;;;;;;;;AChB1B;AAAA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;;;ACVrB;AACA;AACA;AACA,KAAK;AACL;;AAEe,0EAAW,E;;;;;;;;;;;;;;ACN1B;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;;;ACNxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa,WAAW;AACxB;;AAEe,0EAAW,E;;;;;;;;;;;;;;ACb1B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;;;;ACnBrB;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;;;ACLpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACjD3B;AAAA;AAA0C;;AAE1C,YAAY;AACZ,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA,YAAY,6DAAY;AACxB;AACA;;AAEA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC9BtB;AAAA,YAAY;AACZ,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB,kBAAkB;AAClB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;;;AC7B5B;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACLzB;AAAA;AAAwC;;;AAGxC;AACA,gBAAgB,4DAAW;AAC3B;AACA;AACA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;;;ACTnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;;;;ACftB;AACA,UAAU;AACV;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEe,mEAAI,EAAC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\n * \n * @returns {{create: (function(*=, *=): any[])}}\n * @constructor\n */\nfunction Arr () {\n\n    return {\n        create: function (items = 0, default_value = null) {\n            return (new Array(items)).fill(default_value);\n        },\n    };\n}\n\nexport default Arr;\n","\n/**\n * Example:\n * const chain = new Chain(onSuccess, onError);\n *\n * chain.add('Test begin', function (next) {\n *          console.log(next);\n *      })\n *      .add('Next model', function (next) {\n *          next()\n *      })\n *      .add('Last model', function (next) {\n *          next()\n *      })\n *      .next();\n *\n * chain.next();\n *\n * @returns {Function}\n */\nconst Chain = function (ons, onf)\n{\n    const createClass = function ()\n    {\n        function defineProperties(target, props)\n        {\n            for (let i = 0; i < props.length; i++) {\n                const descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n\n                if (\"value\" in descriptor)\n                    descriptor.writable = true;\n\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n        return function (Constructor, protoProps, staticProps)\n        {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n\n            return Constructor;\n        };\n    }();\n\n    function classCallCheck(instance, Constructor)\n    {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    const Chain = function ()\n    {\n        function __chain(onSuccess, onFailed)\n        {\n            classCallCheck(this, __chain);\n\n            this.onSuccess = onSuccess;\n            this.onFailed = onFailed;\n            this.currentIndex = 0;\n            this.list = [];\n        }\n\n        createClass(__chain, [\n            {\n                key: \"register\",\n                value: function register(id, callback) {\n                    this.list.push({id: id, callback: callback});\n                }\n            }, {\n                key: \"next\",\n                value: function next() {\n                    const registered = this.list[this.currentIndex];\n                    if (registered) {\n                        if (registered.callback instanceof Function) {\n                            registered.callback.call({}, () => {\n                                this.currentIndex ++;\n                                this.next();\n                            }, registered.id);\n                        } else {\n                            this.onFailed();\n                        }\n                    } else {\n                        this.onSuccess();\n                    }\n                }\n            }]\n        );\n\n        return __chain;\n    }();\n\n    return new Chain(ons, onf)\n};\n\nexport default Chain;\n","import str2node from \"../static/str2node\";\nimport isNode from \"../static/isNode\";\nimport merge from \"../static/merge\";\nimport search from \"../static/search\";\nimport clone from \"../static/clone\";\nimport random from \"../static/random\";\nimport isHTMLString from \"../static/isHTMLString\";\nimport query from \"../static/query\";\n\n\n/*\n# Config\nid: 'id',\nprops: {},\ntemplate: ``,\nbefore () {},\ninit () {},\ncomplete () {},\ndata: {},\nmethods: {},\ncomponents: {},\ntemplateDataElementsEnabled: true,\ntemplateDataElementsAttributes: COMPONENT_DATA_ATTRIBUTES,\noverride: false,\ninitialized: false,\ncompleted: false,\n\n# Base example\nComponent({\n    id: 'ExternalTemplateComponent',\n    attrs: {},\n    props: ['title'],\n    template: 'template',\n    init () {},\n    data: {},\n    complete (app) {},\n    methods: {}\n});\n\n# Extend example\nComponent({\n    id: 'ExternalTemplateComponent',\n    props: ['title'],\n    template: 'template',\n    init () {},\n    data: {\n        iterator: 0,\n    },\n    complete (app) {\n        if (this.elements('node', 'title'))\n            this.elements('node', 'title').textContent = this.title;\n    },\n    methods: {\n        add (e) {\n            this.node.iterator.textContent = ++ this.data.iterator ;\n        },\n    }\n});\n\nconst componentInfo = new Component({\n    id: 'componentInfo',\n    template: `\n    <div data-node=\"info_block\">\n        <div data-node=\"title\">title</div>\n        <div data-node=\"content\">content</div>\n        <div data-node=\"iterator\">iterator</div>\n    </div>`,\n    attrs: {\n        width: window.innerWidth,\n        height: window.innerHeight - 10,\n    },\n    init () {\n        console.log('init', this );\n    },\n    data: {\n        iterator: 0,\n        title: 'Component Info',\n        content: 'Component content iterator',\n    },\n    complete (app) {\n        console.log('complete', this);\n\n        this.elements('node', 'title').textContent = this.data.title;\n        this.elements('node', 'content').textContent = this.data.content;\n    },\n    methods: {\n        add (e) {\n            this.data.iterator ++;\n            this.node.iterator.textContent = this.data.iterator + ' iteration' ;\n            // this.elements('node', 'iterator').textContent = this.data.iterator + ' iteration' ;\n            // this.getAttrDataNode('iterator').textContent = this.data.iterator + ' iteration' ;\n        },\n    }\n});\n\ncomp = Component({...});\n    templateDataElements: { func:{}, action:{}, node:{}, on:{} },\n        If templateDataElementsEnabled is enabled during component initialization, attributes with names are requested\n        from the template:\n        COMPONENT_DATA_ATTRIBUTES === [data-func], [data-action], [data-node], [data-on]\n\ncomp.component(id)\ncomp.componentChildren(id)\ncomp.clone()\ncomp.on(event, callback)\ncomp.inject(elem, append = true)\ncomp.inject()\ncomp.elements(attr, name)\n*/\n\n/**\n * @param config\n * @returns {*}\n * @constructor\n */\nconst Component = function (config) {\n    if (typeof config === 'string') {\n        // get property by id keyword\n        return Component.list[config];\n    } else {\n        if (!config.id) {\n            let randomName = random.string(6).toLowerCase();\n            randomName = randomName.substring(0, 1).toUpperCase() + randomName.substring(1);\n            config.id = 'Component' + randomName;\n        }\n\n        if (Component.list[config.id]) {\n            return Component.list[config.id];\n        }\n\n        const comp = Component.create(config);\n\n        /**\n         * @param id\n         * @returns {Component|null}\n         */\n        comp.component = function (id) {\n            return comp.components[id] ? comp.components[id] : null;\n        };\n\n        comp.clone = function () {\n            const cloned = clone(this);\n            cloned.template = cloned.template.cloneNode(true);\n            return cloned;\n        };\n\n        comp.on = function (event, callback) {\n            comp.template.addEventListener(event, callback)\n        };\n\n        comp.inject = function (elem, append = false) {\n            if (Array.isArray(elem)) {\n                elem.forEach((e) => {\n                    comp.inject(e, true)\n                });\n            }\n            if (!append) {\n                comp.template.textContent = '';\n            }\n            if (isNode(elem)) {\n                comp.template.appendChild(elem);\n            }\n            if (elem.templateDataElementsAttributes) {\n                comp.addComponent(elem);\n                comp.template.appendChild(elem.template);\n            }\n            if (typeof elem === 'number') {\n                elem = elem.toString();\n            }\n            if (typeof elem === 'string') {\n                if (isHTMLString(elem)) {\n                    elem = str2node(elem);\n                    comp.template.appendChild(elem);\n                } else {\n                    comp.template.textContent += elem;\n                }\n            }\n        };\n\n        comp.append = function (elem) {\n            comp.inject(elem, true);\n        };\n\n        // if (typeof comp.before === 'function' && !comp.initialized) {\n        //     comp.before();\n        // }\n\n        if (typeof comp.template === 'string') {\n            if (comp.template === '' || isHTMLString(comp.template)) {\n                comp.template = str2node(comp.template);\n            } else {\n                comp.template = query(comp.template);\n            }\n        }\n\n        if (comp.methods && Object.values(comp.methods).length) {\n            Object.keys(comp.methods).forEach((key) => {\n                if (typeof comp.methods[key] === 'function') {\n                    comp.methods[key] = comp.methods[key].bind(comp);\n                    if (!comp.hasOwnProperty(key)) {\n                        comp[key] = comp.methods[key];\n                    }\n                }\n            });\n        }\n\n        if (!comp.initialized) {\n            comp.initialized = true;\n\n            if (typeof comp.init === 'function')\n                comp.init();\n        }\n\n        if (comp.data && Object.keys(comp.data).length) {\n            Object.keys(comp.data).forEach((key) => {\n                if (typeof comp.data[key] === 'function') {\n                    comp.data[key] = comp.data[key].bind(comp);\n                }\n                if (!comp.hasOwnProperty(key)) {\n                    comp[key] = comp.data[key];\n                }\n            });\n        }\n\n        if (comp.components && Object.keys(comp.components).length) {\n            Object.keys(comp.components).forEach((key) => {\n                comp.addComponent(comp);\n            });\n        }\n\n        comp.addComponent = function (comp2) {\n            if (!comp.components[comp2.id]) {\n                comp.components[comp2.id] = comp2;\n                comp2.parent = comp;\n            }\n        };\n\n        comp.removeComponent = function (comp2) {\n            if (comp.components[comp2.id]) {\n                comp.components[comp2.id].parent = null;\n                delete comp.components[comp2.id];\n            }\n        };\n\n        /**\n         * attr:\n         *  action\n         *  func\n         *  id\n         *  node\n         *  on\n         *  to\n         * @param attr\n         * @param name\n         * @returns {*|null}\n         */\n        comp.elements = function (attr, name) {\n            attr = attr.replace('data-', '');\n            if (name) {\n                return typeof comp.templateDataElements[attr][name] !== \"undefined\"\n                    ? comp.templateDataElements[attr][name]\n                    : null;\n            }\n\n            return typeof comp.templateDataElements[attr] !== \"undefined\"\n                ? comp.templateDataElements[attr]\n                : null;\n        };\n\n        comp.getAttrDataAction = function (name) {\n            return comp.elements('action', name)\n        };\n        comp.getAttrDataFunc = function (name) {\n            return comp.elements('func', name)\n        };\n        comp.getAttrDataId = function (name) {\n            return comp.elements('id', name)\n        };\n        comp.getAttrDataNode = function (name) {\n            return comp.elements('node', name)\n        };\n        comp.getAttrDataOn = function (name) {\n            return comp.elements('on', name)\n        };\n        comp.getAttrDataTo = function (name) {\n            return comp.elements('to', name)\n        };\n\n        comp.updateTemplateDataElements = function () {\n\n            if (isNode(comp.template)) {\n\n                if (comp.attrs && Object.values(comp.attrs).length) {\n                    Object.keys(comp.attrs).forEach((key) => {\n                        comp.template.setAttribute(key, comp.attrs[key]);\n                    });\n                }\n\n                if (comp.templateDataElementsEnabled === true) {\n                    comp.templateDataElementsAttributes.forEach((attr) => {\n                        const name = attr.substring(5);\n                        comp.templateDataElements[name] = search('[' + attr + ']', attr, comp.template);\n\n                        if (name === 'node') {\n                            comp.node = comp.templateDataElements[name];\n                        }\n                    });\n                }\n\n            }\n        };\n\n        function onComplete() {\n            comp.completed = true;\n            if (typeof comp.before === 'function') comp.before.call(comp, comp);\n            comp.updateTemplateDataElements();\n            if (typeof comp.complete === 'function') comp.complete.call(comp, comp);\n        }\n\n        if (!comp.completed) {\n            if (document) {\n                if (document.querySelector('body')) onComplete();\n                else document.addEventListener('DOMContentLoaded', onComplete);\n            } else\n                onComplete();\n        }\n\n        Component.list[comp.id] = comp;\n        return comp;\n    }\n};\n\nComponent.list = {};\nComponent.create = function (config) {\n    return merge({\n        id: null,\n        attrs: {},\n        props: {},\n        template: false,\n        override: false,\n        init: () => {},\n        before: () => {},\n        complete: () => {},\n        methods: {},\n        node: {},\n        initialized: false,\n        completed: false,\n        templateDataElements: {},\n        templateDataElementsEnabled: true,\n        templateDataElementsAttributes: COMPONENT_DATA_ATTRIBUTES,\n        components: {},\n        // children: [],\n        // parentComponent: {},\n        parent: {},\n    }, config)\n};\n\nexport const COMPONENT_DATA_ATTRIBUTES = [\n    'data-func',\n    'data-action',\n    'data-node',\n    'data-on',\n    'data-to',\n    'data-id',\n];\n\nexport default Component;\n","\n\n/**\n * LocalStorage wrapper\n *\n * @param name\n * @param value\n * @param option\n * @returns {{set: (Cookie.set|*), get: (Cookie.get|*), key: (Cookie.key|*), clear: (Cookie.clear|*), remove: (Cookie.remove|*), length: (Cookie.length|*)}}\n * @constructor\n */\nconst Cookie = function (name, value) {\n    switch (arguments.length) {\n        case 0:\n            return {\n                set: set,\n                get: get,\n                clear: clear,\n                remove: remove,\n                length: length,\n            };\n        case 1:\n            return get(name);\n        case 2:\n            return set(name, value);\n    }\n};\n\n/**\n * Set Cookie key, value\n *  expires - ms, Date, -1, 0\n *  maxAge - s (year 31536000)\n *  SameSite=Strict|Lax\n * @param name\n * @param value\n * @param {{}} options   {expires: 0, path: '/', domain: 'site.com', secure: false, maxAge: 60*60*24*365, sameSite: '' }\n * @param typeJson bool\n */\nconst set = function (name, value, options, typeJson = true)\n{\n    options = options || {};\n\n\n    if (Cookie.typeJson) {}\n    if (typeJson)\n        try {\n            value = JSON.stringify(value);\n        } catch (error) {}\n\n    let data = name + \"=\" + encodeURIComponent(value);\n\n    if (options.expires) {\n        if (options.expires instanceof Date) {\n            options.expires = options.expires.toUTCString();\n        } else {\n            const date = new Date();\n            options.expires = date.setTime(date.getTime() + parseInt(options.expires) * 1000);\n        }\n    }\n\n    if (options.maxAge) {\n        options['max-age'] = options.maxAge;\n        delete options.maxAge;\n    }\n    if (options.sameSite) {\n        options['samesite'] = options.sameSite;\n        delete options.sameSite;\n    }\n\n    data += encode(options);\n    document.cookie = data;\n};\n\n/**\n * Get Cookie value by key\n * @param name\n * @param typeJson bool\n * @returns {*}\n */\nconst get = function (name, typeJson = true) {\n    const matches = document.cookie.match(new RegExp(\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ));\n\n    let data = matches ? decodeURIComponent(matches[1]) : undefined;\n\n    if (Cookie.dataJson) {}\n    if (typeJson && data)\n        try {\n            data = JSON.parse(data)\n        } catch (error) { }\n\n    return data\n};\n\n/**\n * Remove Cookie by key\n * @param name\n * @param option\n */\nconst remove = function (name, option) {\n    option = option || {expires: -1};\n    set(name, \"\", option);\n};\n\nconst clear = function () {\n    document.cookie = '';\n};\n\n/**\n * Convert object to uri get string\n * @param {object} data     example: {expires: 0, path: '/', domain: 'my-site.com', secure: false}\n * @returns {string}        example: \"expires=0;path=/;domain=site.com;secure=false\";\n */\nconst encode = function (data) {\n    let str = '';\n    Object.keys(data).forEach((key) => {\n        if (data[key] !== undefined)\n            str += ';' + key + '=' + encodeURIComponent(data[key]);\n    });\n    return str;\n};\n\nconst decode = function (name) {\n    if (name) {\n        const matches = document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    } else {\n        const data = {},\n            cookies = document.cookie.split('; ');\n\n        cookies.forEach((value) => {\n            if (value.length) {\n                let parts = value.trim().split('=');\n                data[parts[0].trim()] = decodeURIComponent(parts[1]).trim();\n            }\n        });\n        return data;\n    }\n};\n\nCookie.set = set;\nCookie.get = get;\nCookie.remove = remove;\nCookie.clear = clear;\nCookie.encode = encode;\nCookie.decode = decode;\nCookie.dataJson = true;\n\nexport {\n    set,\n    get,\n    clear,\n    remove,\n    encode,\n    decode,\n};\n\nexport default Cookie;\n","const Datetime = {};\nDatetime.MS_IN_DAY = 864e5;\nDatetime.MS_IN_HOUR = 36e5;\nDatetime.MS_IN_MIN = 6e4;\n\n/**\n * Return timestamp\n * @param date\n * @returns {number}\n */\nDatetime.time = function (date) {\n    return date instanceof Date ? date.getTime() : (new Date).getTime()\n};\n\n/**\n * Add days to some date\n * @param day           number of days. 0.04 - 1 hour, 0.5 - 12 hour, 1 - 1 day\n * @param dateStart     type Date, start date\n * @returns {*}  type Date\n */\nDatetime.addDays = function (day, dateStart) {\n    const date = dateStart ? new Date(dateStart) : new Date();\n    date.setTime(date.getTime() + (day * 86400000));\n    return date;\n};\n\n/**\n * Time between Dates\n * <pre>\n *     var from = new Date('2016-08-01 20:30');\n *     var to = new Date('2016-08-10 07:55');\n *     .Date.betweenDates(from, to); // Object { day: 8, hour: 11, minute: 25 }\n * </pre>\n * @param dateFrom\n * @param dateTo\n * @returns {{day: number, hour: number, minute: number}}\n */\nDatetime.betweenDates = function (dateFrom, dateTo) {\n    dateFrom = dateFrom || new Date();\n    dateTo = dateTo || new Date();\n    let diffMs = (dateTo - dateFrom),\n        diffDays = Math.round(diffMs / 864e5),\n        diffHrs = Math.round((diffMs % 864e5) / 36e5),\n        diffMin = Math.round(((diffMs % 864e5) % 36e5) / 6e4);\n    return {day: diffDays, hour: diffHrs, minute: diffMin};\n};\n\n/**\n * Convert date string to Date Object\n * yy - the year as a two-digit number ( 00 to 99 );\n * YY - the year as a four-digit number ( 1900-9999 );\n * mm - the month as a number with a leading zero ( 01 to 12 ) ( 1 to 12 );\n * dd - the day as a number with a leading zero ( 01 to 31 ) ( 1 to 31 );\n * hh HH - the hour ( 00 to 11 ) ( 00 to 23 ) ( 1 to 12 ) ( 0 to 23 );\n * ii - the minute as a number with a leading zero ( 00 to 59 );\n * ss - the second as a number with a leading zero ( 00 to 59 );\n * aa - displays am (for times from midnight until noon) and pm (for times from noon until midnight);\n *\n * Datetime.strToDate('12.05.2017 12:30:25', 'mm.dd.YY HH:ii:ss')\n * Datetime.strToDate('12/05/2017', 'mm/dd/YY')\n * Datetime.strToDate('12/5/2017', 'mm/dd/YY', true)\n * @param date\n * @param format\n * @param utc\n * @returns {Date}\n */\nDatetime.strToDate = function (date, format, utc) {\n    const set = [0, 0, 1, 0, 0, 0];\n    const temp = date.match(/[a-zA-Z]+|[0-9]+/g);\n    const mask = format.match(/[a-zA-Z]{2}/g);\n    for (let i = 0; i < mask.length; i++) {\n        switch (mask[i]) {\n            case \"dd\":\n                set[2] = temp[i] || 1;\n                break;\n            case \"mm\":\n                set[1] = (temp[i] || 1) - 1;\n                break;\n            case \"yy\":\n                set[0] = temp[i] * 1 + (temp[i] > 50 ? 1900 : 2000);\n                break;\n            case \"hh\":\n            case \"HH\":\n                set[3] = temp[i] || 0;\n                break;\n            case \"ii\":\n                set[4] = temp[i] || 0;\n                break;\n            case \"YY\":\n                set[0] = temp[i] || 0;\n                break;\n            case \"aa\":\n                set[3] = set[3] % 12 + ((temp[i] || '').toLowerCase() === 'am' ? 0 : 12);\n                break;\n            case \"ss\":\n                set[5] = temp[i] || 0;\n                break;\n            default:\n                break;\n        }\n    }\n    if (utc) {\n        return new Date(Date.UTC(set[0], set[1], set[2], set[3], set[4], set[5]));\n    }\n    return new Date(set[0], set[1], set[2], set[3], set[4], set[5]);\n};\n\nexport default Datetime;\n\n/*\nexport default {\n    MS_IN_DAY: Datetime.MS_IN_DAY,\n    MS_IN_HOUR: Datetime.MS_IN_HOUR,\n    MS_IN_MIN: Datetime.MS_IN_MIN,\n    time: Datetime.time,\n    addDays: Datetime.addDays,\n    betweenDates: Datetime.betweenDates,\n    strToDate: Datetime.strToDate,\n};\n*/\n","import typeOf from \"../static/typeOf\";\nimport isNode from \"../static/isNode\";\n\nimport attr from \"../static/attr\";\nimport css from \"../static/css\";\nimport domLoaded from \"../static/domLoaded\";\nimport inject from \"../static/inject\";\nimport str2node from \"../static/str2node\";\nimport node2str from \"../static/node2str\";\nimport search from \"../static/search\";\nimport query from \"../static/query\";\nimport queryAll from \"../static/queryAll\";\nimport createFragment from \"../static/createFragment\";\nimport createElement from \"../static/createElement\";\nimport on from \"../static/on\";\nimport defined from \"../static/defined\";\nimport position from \"../static/position\";\nimport merge from \"../static/merge\";\n\nfunction Dom (selector) {\n    const root = {\n        selector: typeOf(selector, 'string') ? selector : null,\n        selected: isNode(selector) ? [selector] : queryAll(selector),\n    };\n    root.selected.forEach((elem, i) => {\n        root[i] = elem;\n    });\n\n    const _set_real_display_style = function (src) {\n        if (typeOf(src, 'string')) {\n            queryAll(src).map(_set_real_display_style);\n        } else if (isNode(src) && src['real-display-style'] === undefined) {\n            const style = src.style.display ? src.style.display : getComputedStyle(src).display;\n            src['real-display-style'] = (!style || style === 'none') ? 'block' : style;\n        }\n    };\n\n    root.one = () => root.selected && root.selected.length ? root.selected[0] : false;\n    root.all = () => root.selected;\n    root.attr = (name, value) => defined(value) ? attr(root.one(), name, value) : attr(root.one(), name);\n    root.inject = (data, append, to) => inject(root.one(), data, append, to);\n    root.append = (data) => inject(root.one(), data, true);\n    root.search = (attr, from) => search(root.one(), attr, from);\n    root.parent = () => root.one().parentNode;\n    root.children = () => {\n        root.one()\n    };\n    root.position = () => position(root.one());\n    root.query = (selector) => root.one().querySelector(selector);\n    root.queryAll = (selector) => root.one().querySelectorAll(selector);\n    root.x = () => position(root.one()).x;\n    root.y = () => position(root.one()).y;\n    root.width = () => position(root.one()).width;\n    root.height = () => position(root.one()).height;\n    root.remove = () => root.one().parentNode.removeChild(root.one());\n    root.show = () => {\n        const src = root.one();\n        _set_real_display_style(src);\n        css(src, {display: src && src['real-display-style'] ? src['real-display-style'] : 'block'});\n    };\n    root.hide = () => {\n        const src = root.one();\n        _set_real_display_style(src);\n        css(src, {display: 'none'});\n    };\n    root.toggle = () => {\n        const src = root.one();\n        if (typeOf(src, 'string')) {\n            queryAll(src).map(Dom.toggle);\n        } else if (isNode(src)) {\n            if (src.style.display === 'none') Dom.show(src);\n            else Dom.hide(src);\n        }\n    };\n    root.on = (eventName, callback, bubble) => on(root.one(), eventName, callback, bubble);\n    root.coords = () => {\n        const coords = root.one().getBoundingClientRect();\n        return merge({top: coords.top + pageYOffset, left: coords.left + pageXOffset}, coords);\n    };\n    return root;\n}\n\nDom.on = on;\nDom.id = (element) => document.getElementById(element);\nDom.attr = attr;\nDom.css = css;\nDom.loaded = domLoaded;\nDom.inject = inject;\nDom.str2node = str2node;\nDom.search = search;\nDom.queryAll = queryAll;\nDom.query = query;\nDom.create = createElement;\nDom.fragment = createFragment;\nDom.node2str = node2str;\nDom.str2node = str2node;\nDom.position = position;\n\n\nexport default Dom;\n","/*\nKeyboardEvent {isTrusted: true, key: 'w', code: 'KeyW', location: 0, ctrlKey: false, …}\n    isTrusted: true\n    altKey: false\n    bubbles: true\n    cancelBubble: false\n    cancelable: true\n    charCode: 0\n    code: \"KeyW\"\n    composed: true\n    ctrlKey: false\n    currentTarget: null\n    defaultPrevented: false\n    detail: 0\n    eventPhase: 0\n    isComposing: false\n    key: \"w\"\n    keyCode: 87\n    location: 0\n    metaKey: false\n    path: (4) [body, html, document, Window]\n    repeat: false\n    returnValue: true\n    shiftKey: false\n    sourceCapabilities: InputDeviceCapabilities {firesTouchEvents: false}\n    srcElement: body\n    target: body\n    timeStamp: 1356.300000000745\n    type: \"keydown\"\n    view: Window {window: Window, self: Window, document: document, name: '', location: Location, …}\n    which: 87\n*/\n\nexport const KeyboardKeyCode = {\n    getCodeByName(name){\n        return KeyboardKeyCode[name]\n    },\n    getNameByCode(code){\n        let result = null;\n\n        Object.keys(KeyboardKeyCode).forEach((key) => {\n            if (code === KeyboardKeyCode[key]) {\n                result = key\n            }\n        });\n\n        return result;\n    },\n    getNames(){\n        return Object.keys(KeyboardKeyCode);\n    },\n    code(key){\n        return KeyboardKeyCode.reverse()[key] || false;\n    },\n    reverse(){\n        let keys = {};\n        for (const [key, value] of Object.entries(KeyboardKeyCode)) {\n            keys[value] = key\n        }\n        return keys;\n    },\n    'Backspace': 8,\n    'Tab': 9,\n    'Enter': 13,\n    'ShiftLeft': 16,\n    'ShiftRight': 16,\n    'ControlLeft': 17,\n    'ControlRight': 17,\n    'AltLeft': 18,\n    'AltRight': 18,\n    'Pause': 19,\n    'Break': 19,\n    'CapsLock': 20,\n    'Escape': 27,\n    'Space': 32,\n    'PageUp': 33,\n    'PageDown': 34,\n    'End': 35,\n    'Home': 36,\n    'ArrowLeft': 37,\n    'ArrowUp': 38,\n    'ArrowRight': 39,\n    'ArrowDown': 40,\n    'PrintScreen': 44,\n    'Insert': 45,\n    'Delete': 46,\n    'Digit0': 48,\n    'Digit1': 49,\n    'Digit2': 50,\n    'Digit3': 51,\n    'Digit4': 52,\n    'Digit5': 53,\n    'Digit6': 54,\n    'Digit7': 55,\n    'Digit8': 56,\n    'Digit9': 57,\n    'KeyA': 65,\n    'KeyB': 66,\n    'KeyC': 67,\n    'KeyD': 68,\n    'KeyE': 69,\n    'KeyF': 70,\n    'KeyG': 71,\n    'KeyH': 72,\n    'KeyI': 73,\n    'KeyJ': 74,\n    'KeyK': 75,\n    'KeyL': 76,\n    'KeyM': 77,\n    'KeyN': 78,\n    'KeyO': 79,\n    'KeyP': 80,\n    'KeyQ': 81,\n    'KeyR': 82,\n    'KeyS': 83,\n    'KeyT': 84,\n    'KeyU': 85,\n    'KeyV': 86,\n    'KeyW': 87,\n    'KeyX': 88,\n    'KeyY': 89,\n    'KeyZ': 90,\n    'MetaLeft': 91,\n    'MetaRight': 92,\n    'ContextMenu': 93,\n    'Numpad0': 96,\n    'Numpad1': 97,\n    'Numpad2': 98,\n    'Numpad3': 99,\n    'Numpad4': 100,\n    'Numpad5': 101,\n    'Numpad6': 102,\n    'Numpad7': 103,\n    'Numpad8': 104,\n    'Numpad9': 105,\n    'NumpadMultiply': 106,\n    'NumpadAdd': 107,\n    'NumpadSubtract': 109,\n    'NumpadDecimal': 110,\n    'NumpadDivide': 111,\n    'F1': 112,\n    'F2': 113,\n    'F3': 114,\n    'F4': 115,\n    'F5': 116,\n    'F6': 117,\n    'F7': 118,\n    'F8': 119,\n    'F9': 120,\n    'F10': 121,\n    'F11': 122,\n    'F12': 123,\n    'NumLock': 144,\n    'ScrollLock': 145,\n    'Semicolon': 186,\n    'Equal': 187,\n    'Comma': 188,\n    'Minus': 189,\n    'Period': 190,\n    'Slash': 191,\n    'Backquote': 192,\n    'BracketLeft': 219,\n    'Backslash': 220,\n    'BracketRight': 221,\n    'Quote': 222,\n};\n\nexport const KeyboardEventName = {\n    get 'keyup' () { return 'keyup' },\n    get 'keydown' () { return 'keydown' },\n    get 'keypress' () { return 'keypress' },\n};\n\n/*\n\nconst keyboard = KeyboardManager();\n\nkeyboard.add(KeyboardEventName.keypress, (event) => {\n    // code: \"KeyW\"\n    // key: \"w\"\n    // keyCode: 87\n    // ctrlKey: false\n    // shiftKey: false\n    // which: 87\n    // type: \"keydown\"\n\n    if (event.code === KeyboardKeyCode.code(KeyboardKeyCode.KeyW)) {\n\n    }\n});\n\nkeyboard.add(event, callback)\nkeyboard.remove(type)\nkeyboard.clear()\n*/\n\n\n/**\n *\n * @returns {{add(*, *): void, clear(): void, active: {left: boolean, up: boolean, right: boolean, down: boolean}, remove(*): void}}\n * @constructor\n */\nconst KeyboardManager = function ()\n{\n    const stack = {};\n    const add = function (type, callback) {\n        stack[type] = callback;\n    };\n\n    function addListener (type) {\n        document.addEventListener(type, stack[type]);\n    }\n\n    function removeListener (type) {\n        document.removeEventListener(type, stack[type]);\n    }\n\n    function removeListeners () {\n        Object.keys(stack).map(function (type) {\n            document.removeEventListener(type, stack[type]);\n        })\n    }\n\n    return {\n        active: {\n            up: false,\n            down: false,\n            left: false,\n            right: false,\n        },\n        add(type, callback) {\n            add(type, callback);\n            addListener(type);\n        },\n\n        remove(event) {\n            removeListener(event);\n        },\n\n        clear() {\n            removeListeners();\n        },\n    };\n};\n\nexport default KeyboardManager;\n","\n\n/**\n * Loader.audios: ƒ (srcs, callback)\n * Loader.images: ƒ (imgs, callback)\n * Loader.javascript: ƒ (src, callback, onerror)\n * Loader.json: ƒ (src, callback, onerror)\n * @property\n * @method json\n * @method jsons\n * @method javascript\n * @method images\n * @method audios\n * @returns {{}}\n * @constructor\n */\nconst Loader = function () {\n    return {\n        json: Loader.json,\n        jsons: Loader.jsons,\n        javascript: Loader.javascript,\n        images: Loader.images,\n        audios: Loader.audios,\n        videos: Loader.video,\n    };\n};\n\n/**\n * .json('/url/datafile.json', (json) => {}, (error) => {})\n *\n * @param src\n * @param callback\n * @param onerror\n */\nLoader.json = function (src, callback, onerror) {\n    fetch(src)\n        .then(response => response.json())\n        .then(json => callback(json))\n        .catch(error => typeof onerror === 'function' ? onerror(error) : null);\n}\n\n/**\n *\n * @param srcs\n * @param callback\n * @param onerror\n */\nLoader.jsons = function (srcs, callback, onerror)\n{\n    if (srcs && typeof srcs === 'object') {\n\n        if (Array.isArray(srcs)) {\n            const obj = {};\n            srcs.map(function (item) {\n                obj[Math.random().toString(32).slice(2)] = item\n            });\n            srcs = obj;\n        }\n\n        const scripts = {};\n        const length = Object.keys(srcs).length;\n        let iterator = 0;\n\n        Object.keys(srcs).forEach((key) => {\n            const src = srcs[key];\n            Loader.json(src, (json) => {\n                scripts[key] = json;\n                iterator ++;\n                if (iterator === length) {\n                    callback.call({}, scripts);\n                }\n            }, onerror);\n        });\n    }\n}\n\n/**\n * Loads a script element with javascript source\n *\n * .javascript ( {\n *      my_script1: '/path/to/my_script1',\n *      my_script2: '/path/to/my_script2',\n *    },\n *    function (list) {})\n *\n * .javascript ( [\n *      '/path/to/my_script1',\n *      '/path/to/my_script2',\n *    ],\n *    function (list) {})\n *\n * @namespace Loader.javascript\n * @param srcs       Object, Array. items: key is ID, value is src\n * @param callback  Function called when all srcs is loaded\n * @param onerror   Function called when load is failed\n * @returns {*}\n */\nLoader.javascript = function (srcs, callback, onerror)\n{\n    if (srcs && typeof srcs === 'object') {\n\n        if (Array.isArray(srcs)) {\n            const obj = {};\n            srcs.map(function (item) {\n                obj[Math.random().toString(32).slice(2)] = item\n            });\n            srcs = obj;\n        }\n\n        const length = Object.keys(srcs).length;\n        const scripts = {};\n        let script;\n        let iterator = 0;\n\n        Object.keys(srcs).forEach((key) => {\n            script = document.createElement('script');\n            script.src = (srcs[key].substr(-3) === '.js') ? srcs[key] : srcs[key] + '.js';\n            script.type = 'application/javascript';\n            script.id = key;\n            script.onerror = onerror;\n            script.onload = function (e) {\n                scripts[this.id] = this;\n                iterator++;\n                if (iterator === length) {\n                    callback.call({}, scripts);\n                }\n            };\n            document.head.appendChild(script);\n        });\n    }\n};\n\n/**\n * Load an images\n *\n * .images ( {\n *      img1: '/path/to/img1',\n *      img2: '/path/to/img2',\n *    },\n *    function (list) {})\n *\n * @namespace Animate.Loader.images\n * @param imgs\n * @param callback\n */\nLoader.images = function (imgs, callback) {\n    if (imgs && typeof imgs === 'object') {\n        const length = Object.keys(imgs).length;\n        const images = {};\n        let iterator = 0;\n        for (let name in imgs) {\n            const img = document.createElement('img');\n            img.src = imgs[name];\n            img.name = name;\n            img.onload = function (e) {\n                images[this.name] = this;\n                iterator++;\n                if (iterator === length) {\n                    callback.call({}, images);\n                }\n            };\n        }\n    }\n}\n\n/**\n * Load an audio files\n *\n * .audios ( {\n *      audio1: '/path/to/audio1',\n *      audio2: '/path/to/audio2',\n *    },\n *    function (list) {})\n *\n * @namespace Animate.Loader.audios\n * @param srcs\n * @param callback\n */\nLoader.audios = function (srcs, callback) {\n    if (srcs && typeof srcs === 'object') {\n        const length = Object.keys(srcs).length;\n        const audios = {};\n        let iterator = 0;\n        for (let name in srcs) {\n            const audio = document.createElement('audio');\n            audio.src = srcs[name];\n            audio.name = name;\n            audio.preload = 'auto';\n            audios[name] = audio;\n            iterator++;\n            if (iterator === length) {\n                callback.call({}, audios);\n            }\n        }\n    }\n};\n\n/**\n * Load an video files\n *\n * .videos ( {\n *      video1: '/path/to/video1',\n *      video2: '/path/to/video2',\n *    },\n *    function (list) {})\n *\n * @namespace Animate.Loader.videos\n * @param srcs\n * @param callback\n */\nLoader.videos = function (srcs, callback) {\n    if (srcs && typeof srcs === 'object') {\n        const length = Object.keys(srcs).length;\n        const videos = {};\n        let iterator = 0;\n        for (let name in srcs) {\n            const video = document.createElement('video');\n            video.src = srcs[name];\n            video.name = name;\n            video.preload = 'auto';\n            videos[name] = video;\n            iterator++;\n            if (iterator === length) {\n                callback.call({}, videos);\n            }\n        }\n    }\n}\n\nexport default Loader;\n","import trimSymbols from \"../static/trimSymbols\";\n\nconst Router = function (config)\n{\n    const root = {};\n    root.hash = location.hash;\n    root.root = '/' + trimSymbols(config.root, '/');\n    root.pathname = '/' + trimSymbols(location.pathname, '/') + '/';\n    root.routes = config.routes ? config.routes : {};\n    root.context = config.context ? config.context : {};\n\n    root.to = function (key) {\n        console.log(key)\n        if (typeof root.routes[key] === \"function\") {\n            root.routes[key].call({}, root.context);\n        }\n    };\n\n    Object.keys(root.routes).forEach((key) => {\n        const is = key.includes('#')\n            ? key === root.hash\n            : root.root + key === root.pathname;\n\n        if (is && typeof root.routes[key] === \"function\") {\n            root.routes[key].call(root.context, root.context);\n        }\n    });\n\n    return root;\n};\n\nexport default Router;\n","/*\n\nlet stage = {\n    title: '',\n    body: '',\n    user: {email: '',name: '',},\n};\n\nconst rx = Roxy(stagePrevious);\nstage = rx.proxy;\nstage = rx.getContext();\nstage = rx.getProxy();\n\nrx.observe('title', (key, values)=>{\n    // key title\n    // value 'new title'\n});\n\nrx.removeLoopListener();\nrx.loopListener((key, value) => {\n    // key title\n    // value 'new title'\n});\n\n// rx.dispatch('title', 'new title');\n\nstage.title = 'new  title'; // dispatch event\n\n\n\n\nrx.addListener((key, values)=>{\n    if (key === '') {}\n    inject('#' + key, values);\n});\nrx.removeListener();\n\nrx.proxy.title = 'First value';\nrx.proxy.body = 'Test body text';\n\nrx.fill({\n    title: 'title',\n});\n\nrx.fill({\n    email: 'value',\n    name: 'value',\n}, 'user');\n\nTimer.timeout(() => {\n    rx.dispatch('title', 'Hello friend');\n    rx.dispatch('body', 'Do you happy now?');\n}, 2000);\n\nrx.get(key);                // return proxy object by key\nrx.fill(payload, to);       // fill proxy by payload object, or to included object entries\nrx.observe(key, callback);  // listener\nrx.dispatch(key, payload);  // dispatcher\nrx.proxy                    // getter, return all proxy objects\nrx.getProxy();              // return ProxyConstructor\n\n*/\n\n\nimport copy from \"../static/copy\";\n\n/**\n *\n * @param payload\n * @returns {{removeLoopListener(): boolean, readonly proxy: *, loopListener(*): void, dispatch(*, *): this, getProxy(): *, get(*): *, fill(*, *): this, getContext(): *, observe(*, *): this}|*|boolean|null}\n * @constructor\n */\nconst Roxy = function (payload)\n{\n    let ___callbacklistener___ = false;\n    let ___eventcallbacks___ = {\n        default: null,\n    };\n\n    const proxy = new Proxy(payload, {\n        get(obj, prop) {\n            return prop in obj ? obj[prop] : null;\n        },\n        set(obj, prop, value) {\n\n            obj[prop] = value;\n\n            if (___callbacklistener___) {\n                ___callbacklistener___.call({}, prop, value, copy(proxy));\n            }\n\n            if (___eventcallbacks___[prop] && typeof ___eventcallbacks___[prop] === \"function\") {\n                ___eventcallbacks___[prop].call({}, prop, value, copy(proxy));\n            }\n\n            if (typeof ___eventcallbacks___.default === \"function\") {\n                ___eventcallbacks___.default.call({}, prop, value, copy(proxy));\n            }\n            return true;\n        }\n    });\n\n    return {\n        get(key) {\n            return key ? proxy[key] : copy(proxy);\n        },\n        get proxy() {\n            return proxy;\n        },\n        getProxy() {\n            return proxy;\n        },\n        getContext() {\n            return proxy;\n        },\n        loopListener(callback) {\n            ___callbacklistener___ = callback;\n        },\n        removeLoopListener() {\n            return ___callbacklistener___ = false;\n        },\n        dispatch(key, payload)\n        {\n            let result;\n\n            if (typeof key === \"function\" && !payload) {\n                result = key.call({}, proxy);\n\n                if (result) {\n                    this.fill(result);\n                }\n\n            } else if (typeof payload === \"function\") {\n                result = payload.call({}, proxy[key]);\n                this.fill({[key]: result});\n\n            } else {\n                proxy[key] = payload;\n            }\n\n            return this;\n        },\n        observe(key, callback) {\n            if (typeof key === \"function\" && !callback) {\n                ___eventcallbacks___.default = key;\n            } else {\n                ___eventcallbacks___[key] = typeof callback === \"function\"\n                    ? callback\n                    : null;\n            }\n\n            return this;\n        },\n\n        fill(payload, to) {\n            Object.keys(payload).forEach((key) => {\n                if (to) {\n                    if (!proxy[to]) { proxy[to] = {}; }\n                    proxy[to][key] = payload[key];\n                } else {\n                    proxy[key] = payload[key];\n                }\n            });\n\n            return this;\n        },\n    };\n};\n\n\nexport default Roxy;\n","import Roxy from \"./Roxy\";\n\n/*\nconst rx = RoxyListener ({\n    eventName () { /* handler .../ },\n    eventName () { /* handler .../ },\n})\nrx.set();\nrx.dispatch();\n\nrx.action();\n*/\n\n/**\n * const rx = RoxyListener ({\n *     eventName () { /* handler .../ },\n *     eventName () { /* handler .../ },\n * })\n * rx.addListener();\n * rx.dispatch();\n *\n * rx.action();\n *\n * @param payload\n * @returns {{removeLoopListener(): boolean, readonly proxy: *, loopListener(*): void, dispatch(*, *): this, getProxy(): *, get(*): *, fill(*, *): this, getContext(): *, observe(*, *): this}} * @constructor\n * @constructor\n */\nconst RoxyListener = function (payload) {\n\n    const actions = {\n        __action__() {\n        }\n    };\n\n    const actionsNames = {};\n\n    Object.keys(payload).map(function (eventName, index) {\n        actions[eventName] = payload[eventName];\n\n        if (typeof payload[eventName] === 'function' && eventName !== actions.__action__.name) {\n            actionsNames[eventName] = '';\n        }\n    });\n\n    const rx = Roxy(actionsNames);\n    //\n    rx.actions = function () {\n        return actionsNames\n    };\n\n    // observe\n    rx.addListener((eventCursor, values) => {\n        actions.__action__.call(actions, eventCursor, values);\n\n        Object.keys(actions).map(function (eventName, index) {\n\n            if (eventCursor === eventName && typeof actions[eventName] === 'function') {\n                actions[eventName].call(actions, eventCursor, values);\n            }\n        })\n    });\n\n    return rx;\n};\n\nexport default RoxyListener;\n","/**\n * Add item by name\n * @param name\n * @param value\n * @param json\n */\nconst set = function (name, value, json = true) {\n    if (json)\n        try {\n            value = JSON.stringify(value);\n        } catch (error) {}\n    return Storage.typeStorageObject.setItem(name, value);\n};\n\n/**\n * Get item by name\n * @param {string} name\n * @param json\n */\nconst get = function (name, json = true) {\n    let value = Storage.typeStorageObject.getItem(name);\n    if (json && value)\n        try {\n            value = JSON.parse(value);\n        } catch (error) {}\n\n    return value;\n};\n\n/**\n *\n * Remove item by name\n * @param name\n */\nconst remove = function (name) {\n    return Storage.typeStorageObject.removeItem(name)\n};\n\n/**\n * Get item by index\n *\n * @param index\n * @returns {string}\n */\nconst key = function (index) {\n    return Storage.typeStorageObject.key(index)\n};\n\n/**\n * When invoked, will empty all keys out of the storage.\n */\nconst clear = function () {\n    return Storage.typeStorageObject.clear()\n};\n\n/**\n * Returns an integer representing the number of data items stored in the Storage object.\n * @returns {number}\n */\nconst length = function () {\n    return Storage.typeStorageObject.length\n};\n\n/**\n * LocalStorage wrapper\n *\n * Storage.typeStorage = 'local'; // local for use `localStorage` or session\n *\n * Storage.set(name, {})\n * Storage.get(name)\n * Storage.key(index)\n * Storage.clear()          // common clear `localStorage`\n * Storage.remove(name)     // delete item by name\n * Storage.length()         // common width wight of `localStorage`\n *\n * Storage(name) === Storage.get(name)\n * Storage(name, {}) === Storage.set(name, {})\n *\n * @param name\n * @param value\n * @returns {string|{set: (function(*, *, *=): void), get: (function(string, *=): string), clear: (function(): void), length: (function(): number), key: (function(*): string), remove: (function(*): void)}|void}\n * @constructor\n */\nconst Storage = function (name, value) {\n    switch (arguments.length) {\n        case 0:\n            return {\n                set: set,\n                get: get,\n                key: key,\n                clear: clear,\n                remove: remove,\n                length: length,\n            };\n        case 1:\n            return get(name);\n        case 2:\n            return set(name, value);\n    }\n};\n\n//\nStorage.set = set;\nStorage.get = get;\nStorage.key = key;\nStorage.clear = clear;\nStorage.remove = remove;\nStorage.size = length;\nStorage.typeStorage = 'local';\nStorage.typeStorageObject = Storage.typeStorage === 'local' ? window.localStorage : window.sessionStorage;\n\nexport default Storage;\n","import typeOf from \"../static/typeOf\";\nimport str2node from \"../static/str2node\";\nimport node2str from \"../static/node2str\";\nimport each from \"../static/each\";\n\n\nconst capitalize = (s) => {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nfunction Str (string) {\n    const $ = {\n        string: typeOf(string, 'string') ? string : '',\n        length: string.length,\n    };\n\n    $.capitalize = () => capitalize($.string);\n    $.upper = () => $.string.toUpperCase();\n    $.lower = () => $.string.toLowerCase();\n    $.padEnd = (value) => $.string.padEnd(value);\n    $.padStart = (value) => $.string.padStart(value);\n    $.each = (callback) => callback ? $.string.split('').forEach(callback) : $.string.split('');\n\n    return $;\n}\n\nStr.capitalize = capitalize;\nStr.node2str = node2str;\nStr.str2node = str2node;\nStr.each = each;\n\nexport default Str;\n","/**\n *\n * @param callback: function\n * @param ms\n * @param thisInst\n * @return {number}\n */\nconst timeout = function (callback = () => {}, ms = 1000, thisInst = null) {\n    thisInst = typeof thisInst === 'object' ? thisInst : {};\n\n    return setTimeout(function () {\n        callback.call(thisInst)\n    }, ms);\n};\n\n/**\n * @example Timer.interval( function(iterator, stop){ if (iterator > 10){ stop(); } }, 300);\n * @param callback\n * @param ms\n * @param thisInst\n * @return {number}\n */\nconst interval = function (callback = () => {}, ms = 1000, thisInst = null)\n{\n    thisInst = typeof thisInst === 'object' ? thisInst : {};\n\n    let iterate = 0;\n    let instance = setInterval(function () {\n        callback.call(thisInst,  ++ iterate, stop)\n    }, ms);\n\n    function stop() {\n        clearInterval(instance);\n    }\n\n    return instance;\n};\n\nconst Timer = function (callback, delay = 1000, repeat = 1, thisInstance = null)\n{\n    if (repeat > 1) {\n        interval((iterator, stop) => {\n            if (iterator > repeat) {\n                stop();\n            } else {\n                callback.call(thisInstance, iterator, stop);\n            }\n        }, delay);\n    } else {\n        timeout(callback, delay, thisInstance)\n    }\n\n    return this;\n};\n\nTimer.timeout = timeout;\nTimer.interval = interval;\nTimer.clear = (id) => {\n    clearTimeout(id);\n    clearInterval(id);\n};\n\nexport default Timer;","import stylizer from \"../static/stylizer\";\nimport isNumber from \"../static/isNumber\";\n/*\n\ntransform = Transform(this.element);\ntransform.method('rotate', ['45deg']);\ntransform.update();\ntransform.research();\ntransform.functionParameters('matrix')         // [1, 0, 0, 1, 0, 0]: array\ntransform.functionParameters('rotate')         // [\"45deg\"]: string\ntransform.functionParameters('rotate', true)   // 45: int\n\n// ...\nTransform.element(this.element, [\n    'rotate(' + 10 +'deg)',\n    'scale(0.6, 0.6)',\n    'matrix(1, 0, 0, 1, 0, 0)',\n]);\nTransform.element(this.element, ['rotate(' + 10 +'deg)'])\nconst trs = Transform(this.element);\n\n// without of the Transform\nthis.style({\n    transform: 'rotate(' + 10 +'deg) scale(0.6, 0.6) matrix(1, 0, 0, 1, 0, 0)'\n});\n\n*/\nconst Transform = function (element, params)\n{\n    const root = {\n        element: element,\n        transform_obj: {},\n        transform_arr: element.style.transform.split(')').filter((value) => value.length ),\n        transform_string: '',\n\n        update(){\n            root.transform_string = '';\n\n            Object.keys(root.transform_obj).forEach((key) => {\n                root.transform_string += key + '(' + root.transform_obj[key].join(', ') + ') ';\n            });\n\n            root.element.style.transform =  root.transform_string;\n            root.research();\n        },\n\n        method(method, properties, multiply = false) {\n            if (typeof method === 'string') {\n                properties = Array.isArray(properties) ? properties : [properties];\n\n                if (multiply) {\n                    if (root.transform_obj[method]) {\n                        properties.forEach((value, i) => {\n                            if(typeof value === 'string') {\n                                const ext = value.match(/[a-z]+/g);\n                                const num = parseInt(value) + parseInt(root.transform_obj[method][i]);\n                                properties[i] = num + ext;\n                            } else {\n                                properties[i] = value + root.transform_obj[method][i];\n                            }\n                            root.transform_obj[method] = properties;\n                        });\n                    } else {\n                        root.transform_obj[method] = properties;\n                    }\n                } else {\n                    root.transform_obj[method] = properties;\n                }\n\n            } else {\n                throw new Error('Sets parameters is not available')\n            }\n        },\n\n        research(){\n            root.transform_arr = element.style.transform.split(')')\n                .filter((value) => value.length );\n\n            root.transform_arr.forEach((value, i) => {\n                const param = root.transform_arr[i] = root.transform_arr[i].trim()  + ')';\n                const matched = param.match(/[\\w\\.\\-]+/ig);\n                root.transform_obj[matched[0]] = matched.slice(1);\n            });\n        },\n\n        functionParameters(name, FIRST_ITEM_TO_INTEGER = false){\n            if (FIRST_ITEM_TO_INTEGER\n                && Array.isArray(root.transform_obj[name])\n                && root.transform_obj[name].length === 1)\n            {\n                const item = root.transform_obj[name][0];\n                return isNumber(item)\n                    ? parseInt(item)\n                    : root.transform_obj[name];\n            }\n            return root.transform_obj[name];\n        },\n    };\n\n    root.research();\n\n    if (params && typeof params === 'object') {\n        Object.keys(params).forEach((key) => {\n            root.method(key, params[key]);\n        });\n        root.update();\n    }\n\n    return root;\n}\n\nTransform.element = function (element, values){\n    if (Array.isArray(values)) {\n        const props = [];\n        values.forEach((prop) => { props.push(prop) });\n        stylizer(element, {transform: props.join(' ')});\n    }\n};\n\nexport default Transform;\n","import Chain from \"./components/Chain\";\nimport Component from \"./components/Component\";\nimport Roxy from \"./components/Roxy\";\nimport RoxyListener from \"./components/RoxyListener\";\nimport Timer from \"./components/Timer\";\nimport Router from \"./components/Router\";\nimport KeyboardManager from \"./components/KeyboardManager\";\nimport Loader from \"./components/Loader\";\nimport abc from \"./static/abc\";\nimport clone from \"./static/clone\";\nimport convertHEXtoRGB from \"./static/convertHEXtoRGB\";\nimport convertRGBtoHEX from \"./static/convertRGBtoHEX\";\nimport wait from \"./static/wait\";\nimport values from \"./static/values\";\nimport uri from \"./static/uri\";\nimport toSnakeCase from \"./static/toSnakeCase\";\nimport toObject from \"./static/toObject\";\nimport toXML from \"./static/toXML\";\nimport sprintf from \"./static/sprintf\";\nimport toMap from \"./static/toMap\";\nimport str2node from \"./static/str2node\";\nimport toCamelCase from \"./static/toCamelCase\";\nimport typeOf from \"./static/typeOf\";\nimport typeOfStrict from \"./static/typeOfStrict\";\nimport stylizer from \"./static/stylizer\";\nimport trimSymbols from \"./static/trimSymbols\";\nimport uniqArray from \"./static/uniqArray\";\nimport str2fragment from \"./static/str2fragment\";\nimport toMinusCase from \"./static/toMinusCase\";\nimport trim from \"./static/trim\";\nimport sum from \"./static/sum\";\nimport toArray from \"./static/toArray\";\nimport shuffleArray from \"./static/shuffleArray\";\nimport search from \"./static/search\";\nimport redirect from \"./static/redirect\";\nimport range from \"./static/range\";\nimport {random, randomColor, randomItem, randomNumber, randomString} from \"./static/random\";\nimport radiansToDegrees from \"./static/radiansToDegrees\";\nimport query from \"./static/query\";\nimport queryAll from \"./static/queryAll\";\nimport positionMouse from \"./static/positionMouse\";\nimport position from \"./static/position\";\nimport on from \"./static/on\";\nimport number2string from \"./static/number2string\";\nimport node2str from \"./static/node2str\";\nimport min from \"./static/min\";\nimport middleNumber from \"./static/middleNumber\";\nimport merge from \"./static/merge\";\nimport max from \"./static/max\";\nimport loadJSSync from \"./static/loadJSSync\";\nimport loadJSON from \"./static/loadJSON\";\nimport loadJS from \"./static/loadJS\";\nimport loadCSS from \"./static/loadCSS\";\nimport loadBlobfile from \"./static/loadBlobfile\";\nimport isUpperCase from \"./static/isUpperCase\";\nimport isString from \"./static/isString\";\nimport isRegExp from \"./static/isRegExp\";\nimport isObject from \"./static/isObject\";\nimport isNumber from \"./static/isNumber\";\nimport isNode from \"./static/isNode\";\nimport isLowerCase from \"./static/isLowerCase\";\nimport isInteger from \"./static/isInteger\";\nimport isHTMLString from \"./static/isHTMLString\";\nimport isFunction from \"./static/isFunction\";\nimport isEqualArrays from \"./static/isEqualArrays\";\nimport isEmpty from \"./static/isEmpty\";\nimport isDefined from \"./static/isDefined\";\nimport isBoolean from \"./static/isBoolean\";\nimport inject from \"./static/inject\";\nimport httpRequest from \"./static/httpRequest\";\nimport getWindow from \"./static/getWindow\";\nimport getLocation from \"./static/getLocation\";\nimport getDocument from \"./static/getDocument\";\nimport format from \"./static/format\";\nimport find from \"./static/find\";\nimport extend, {extendRecursive} from \"./static/extend\";\nimport exists from \"./static/exists\";\nimport encodeGetQuery from \"./static/encodeGetQuery\";\nimport each from \"./static/each\";\nimport domLoaded from \"./static/domLoaded\";\nimport decodeGetQuery from \"./static/decodeGetQuery\";\nimport css from \"./static/css\";\nimport createFragment from \"./static/createFragment\";\nimport createElement from \"./static/createElement\";\nimport cssInject from \"./static/cssInject\";\nimport Arr from \"./components/Arr\";\nimport Cookie from \"./components/Cookie\";\nimport Datetime from \"./components/Datetime\";\nimport Dom from \"./components/Dom\";\nimport Str from \"./components/Str\";\nimport Storage from \"./components/Storage\";\nimport Transform from \"./components/Transform\";\n\nexport default {\n    // components\n    LibArr: Arr,\n    LibChain: Chain,\n    LibComponent: Component,\n    LibCookie: Cookie,\n    LibDatetime: Datetime,\n    LibDom: Dom,\n    LibKeyboardManager: KeyboardManager,\n    LibLoader: Loader,\n    LibRouter: Router,\n    LibRoxy: Roxy,\n    LibRoxyListener: RoxyListener,\n    LibStorage: Storage,\n    LibStr: Str,\n    LibTimer: Timer,\n    LibTransform: Transform,\n\n    // static\n    Lib: {\n        abc: abc,\n        clone: clone,\n        convertHEXtoRGB: convertHEXtoRGB,\n        convertRGBtoHEX: convertRGBtoHEX,\n        createElement: createElement,\n        createFragment: createFragment,\n        css: css,\n        cssInject: cssInject,\n        decodeGetQuery: decodeGetQuery,\n        domLoaded: domLoaded,\n        each: each,\n        encodeGetQuery: encodeGetQuery,\n        exists: exists,\n        extend: extend,\n        extendRecursive: extendRecursive,\n        find: find,\n        findOne: find.one,\n        findMany: find.one,\n        format: format,\n        getDocument: getDocument,\n        getLocation: getLocation,\n        getWindow: getWindow,\n        httpRequest: httpRequest,\n        inject: inject,\n        isBoolean: isBoolean,\n        isDefined: isDefined,\n        isEmpty: isEmpty,\n        isEqualArrays: isEqualArrays,\n        isFunction: isFunction,\n        isHTMLString: isHTMLString,\n        isInteger: isInteger,\n        isLowerCase: isLowerCase,\n        isNode: isNode,\n        isNumber: isNumber,\n        isObject: isObject,\n        isRegExp: isRegExp,\n        isString: isString,\n        isUpperCase: isUpperCase,\n        loadBlobfile: loadBlobfile,\n        loadCSS: loadCSS,\n        loadJS: loadJS,\n        loadJSON: loadJSON,\n        loadJSSync: loadJSSync,\n        max: max,\n        merge: merge,\n        middleNumber: middleNumber,\n        min: min,\n        node2str: node2str,\n        number2string: number2string,\n        on: on,\n        position: position,\n        positionMouse: positionMouse,\n        queryAll: queryAll,\n        query: query,\n        radiansToDegrees: radiansToDegrees,\n        random: random,\n        randomColor: randomColor,\n        randomItem: randomItem,\n        randomNumber: randomNumber,\n        randomString: randomString,\n        range: range,\n        redirect: redirect,\n        search: search,\n        shuffleArray: shuffleArray,\n        toArray: toArray,\n        toCamelCase: toCamelCase,\n        toMinusCase: toMinusCase,\n        toMap: toMap,\n        toObject: toObject,\n        toXML: toXML,\n        toSnakeCase: toSnakeCase,\n        trim: trim,\n        trimSymbols: trimSymbols,\n        typeOf: typeOf,\n        typeOfStrict: typeOfStrict,\n        sum: sum,\n        str2fragment: str2fragment,\n        str2node: str2node,\n        stylizer: stylizer,\n        uniqArray: uniqArray,\n        sprintf: sprintf,\n        uri: uri,\n        values: values,\n        wait: wait,\n    },\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\nexport const LETTER_CONSONANT = 'B,C,D,F,G,H,J,K,L,M,N,P,Q,R,S,T,V,W,X,Y,Z';\nexport const LETTER_VOWEL = 'A,E,I,O,U,Y';\nexport const ABC = 'A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z';\nexport const NUMBERS = '0,1,2,3,4,5,6,7,8,9';\nexport const AMPERSAND = '&';\n\nexport default {\n    LETTER_CONSONANT,\n    LETTER_VOWEL,\n    ABC,\n    NUMBERS,\n    AMPERSAND,\n};\n","import query from './query';\nimport typeOf from './typeOf';\nimport isNode from './isNode';\n\n\nconst attr = function (element, name, value) {\n    const type_element = typeOf(element);\n    if (type_element === 'string') {\n        element = query(element);\n    }\n\n    if (isNode(element) && arguments.length === 2) {\n        if (typeOf(name, 'object')) {\n            for (let key in name)\n                attr(element, key, name[key]);\n        } else\n            return element.getAttribute(name);\n    }\n    else if (isNode(element) && arguments.length === 3) {\n        if (value === false) element.removeAttribute(name);\n        else element.setAttribute(name, value);\n    }\n};\n\nexport default attr;\n","/**\n *\n * @param from\n * @param to\n * @returns {*}\n */\nfunction clone(from, to)\n{\n    if (from === null || typeof from !== \"object\") return from;\n    if (from.constructor !== Object && from.constructor !== Array) return from;\n    if (from.constructor === Date || from.constructor === RegExp || from.constructor === Function ||\n        from.constructor === String || from.constructor === Number || from.constructor === Boolean) {\n        return new from.constructor(from);\n    }\n\n    to = to || new from.constructor();\n\n    for (name in from)\n    {\n        to[name] = typeof to[name] == \"undefined\" ? clone(from[name], null) : to[name];\n    }\n\n    return to;\n}\n\nexport default clone;\n","\n\n/**\n * convertHEXtoRGB\n * @param hex\n * @returns {*}\n */\nconst convertHEXtoRGB = function (hex) {\n    hex = hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, function(m, r, g, b) { return r + r + g + g + b + b });\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {r: parseInt(result[1], 16), g: parseInt(result[2], 16), b: parseInt(result[3], 16)} : null;\n};\n\nexport default convertHEXtoRGB;\n","\n\nconst convertRGBtoHEX = function (r, g, b) {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n};\n\n\nexport default convertRGBtoHEX;\n","import typeOf from \"./typeOf\";\nimport isNode from \"./isNode\";\n\n\nconst copy = function (src, instance)\n{\n    if (isNode(src))\n        return src.cloneNode(true);\n\n    if (Array.isArray(src))\n        return src.slice();\n\n    if (typeof src === 'function')\n        return src.bind(instance || {});\n\n    if (typeOf(src, 'object')) {\n        let result = {};\n        Object.keys(src).forEach((key) => {\n            let value = src[key];\n            result[key] = copy(value, typeof value === \"function\" ? src : {});\n        });\n        return result;\n    }\n\n    return src;\n};\n\nexport default copy;\n","import typeOf from './typeOf';\nimport isNode from './isNode';\n\n/**\n *\n * @param tag\n * @param attrs\n * @param inner\n * @param styles\n * @return {HTMLElement|Node}\n */\nconst createElement = function (tag, attrs, inner, styles) {\n    const\n        element = document.createElement(tag),\n        is_attr = function (src) {\n            return typeOf(src, 'object') && !isNode(src)\n        },\n        insert_html = function (src) {\n            element.insertAdjacentHTML('beforeend', src);\n        },\n        insert_child = function (src) {\n            element.appendChild(src);\n        },\n        insert = function (src) {\n            const type = typeOf(src);\n            if (type === 'string')\n                insert_html(src);\n            else if (type === 'object' && isNode(src))\n                insert_child(src);\n            else if (type === 'array')\n                for (let i = 0; i < src.length; i++) insert(src[i]);\n        };\n\n    if (arguments.length === 2 && !is_attr(attrs)) {\n        inner = attrs;\n        attrs = false;\n    }\n\n    if (attrs)\n        Object.keys(attrs).forEach((key) => {element.setAttribute(key, attrs[key])});\n\n    if (styles)\n        Object.keys(styles).forEach((key) => {element.style[key] = styles[key]});\n\n    if (inner)\n        insert(inner);\n\n    return element;\n};\n\nexport default createElement;\n","import isNode from \"./isNode\";\nimport typeOf from \"./typeOf\";\nimport str2node from \"./str2node\";\n\n\nconst createFragment = function (append) {\n    const fragment = document.createDocumentFragment();\n\n    if (isNode(append))\n        fragment.appendChild(append);\n\n    if (typeOf(append, 'string'))\n        fragment.appendChild(str2node(append));\n\n    return fragment\n};\n\nexport default createFragment;\n","import typeOf from './typeOf';\nimport isNode from './isNode';\nimport queryAll from './queryAll';\n\n/**\n *\n * css( '.header', {color: 'red', 'font-size': '120%'} )\n * // or\n * css( '.header', 'color', 'red' )\n *\n * @param selector\n * @param properties\n * @returns {null|undefined}\n */\nconst css = function (selector, properties) {\n    if (!selector || !properties) return;\n    if (arguments.length === 3) {\n        const prop = {};\n        prop[properties] = arguments[2];\n        return css(selector, prop);\n    }\n\n    let i, k, elements = null,\n        typeSelector = typeOf(selector),\n        typeProperties = typeOf(properties),\n        parse = function (str) {\n            let i, p1 = str.split(';'), p2, pn, ix, o = {};\n            for (i = 0; i < p1.length; i++) {\n                p2 = p1[i].split(':');\n                pn = p2[0].trim();\n                ix = pn.indexOf('-');\n                if (ix !== -1)\n                    pn = pn.substring(0, ix) + pn[ix + 1].toUpperCase() + pn.substring(ix + 2);\n                if (p2.length === 2)\n                    o[pn] = p2[1].trim()\n            }\n            return o;\n        };\n\n\n    switch (typeSelector) {\n        case 'string':\n            elements = queryAll(selector);\n            break;\n\n        case 'object':\n            if (isNode(selector))\n                elements = [selector];\n            break;\n\n        case 'array':\n            elements = selector;\n            break;\n    }\n\n    if (elements) {\n\n        if (typeProperties === 'string')\n            properties = parse(properties);\n\n        for (i in elements)\n            for (k in properties)\n                elements[i].style[k] = properties[k];\n    }\n\n    return elements\n};\n\nexport default css;\n","\nimport createElement from \"./createElement\";\nimport hasLowerCase from \"./hasLowerCase\";\nimport toMinusCase from \"./toMinusCase\";\n\n/**\n * cssInject({ '#canvas': { backgroundColor: '#171717',border: '3px solid #DDDDDD' } });\n *\n * @param object\n * @returns {*}\n */\nconst cssInject = function (object) {\n    let cssString = '';\n    Object.keys(object).forEach((selector)=>{\n        cssString += `${selector} {\\n`;\n        Object.keys(object[selector]).forEach((prop)=>{\n            const name = hasLowerCase(prop) ? toMinusCase(prop) : prop;\n            const value = object[selector][prop];\n            cssString += `\\t${name}: ${value};\\n`;\n        });\n        cssString += `}\\n`;\n\n    });\n    const css = createElement('style', {}, cssString);\n    if (document && document.head) {\n        document.head.appendChild(css);\n    }\n\n    return css;\n};\n\nexport default cssInject;\n","\nconst decodeGetQuery = function (query) {\n    const result = {};\n    const pairs = (query[0] === '?' ? query.substr(1) : query).split('&');\n    pairs.forEach((item, i) => {\n        let pair = pairs[i].split('=');\n        result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    });\n    return result;\n};\n\nexport default decodeGetQuery;\n","\nconst defined = function (value) {\n    return value !== undefined;\n};\n\nexport default defined;\n","import getDocument from \"./getDocument\";\n\n\nconst domLoaded = function (callback) {\n    const doc = getDocument();\n    if (doc.querySelector('body'))\n        callback.call();\n    else\n        doc.addEventListener('DOMContentLoaded', function () {\n            callback.call()\n        }, false);\n};\n\nexport default domLoaded;\n","import isNode from './isNode';\nimport query from './query';\nimport typeOf from \"./typeOf\";\n\n/**\n *\n * each( array, (i, v, array) => {}, instance )\n *\n * @param list\n * @param callback\n * @param instance\n */\nconst each = function (list, callback, instance) {\n    let type = typeOf(list);\n\n    switch (type) {\n        case 'array':\n            list.forEach((i, v, a) => callback.call(instance, i, v, a));\n            break;\n        case 'object':\n            if (isNode(list)) {\n                if (list instanceof NodeList)\n                    each(Array.from(list), callback, instance)\n                else\n                    each([list], callback, instance)\n            } else\n                Object.keys(list).forEach((key) => callback.call(instance, list[key], key, list));\n            break;\n        case 'string':\n            each(list.split(\"\"), callback, instance);\n            break;\n    }\n};\n\neach.parent = function (selector, filter, loops = 10) {\n    const getParent = (elem) => elem && elem.parentNode ? elem.parentNode : false;\n    let element = isNode(selector) ? selector : query(selector);\n    while (loops > 0 && element) {\n        loops--;\n        if (element.parentNode && element.parentNode.querySelector(filter)) {\n            return element\n        }\n        element = getParent(element);\n    }\n};\n\neach.filter = function (selector, filter, callback, loops = 10) {\n    const getParent = (elem) => elem && elem.parentNode ? elem.parentNode : false;\n    let element = isNode(selector) ? selector : query(selector);\n    while (loops > 0 && element) {\n        loops--;\n        if (element.parentNode && element.parentNode.querySelector(filter)) {\n            callback(element);\n            return element\n        }\n        element = getParent(element);\n    }\n    return element;\n};\n\nexport default each;\n","\nconst encodeGetQuery = function (params) {\n    let result = '';\n    Object.keys(params).forEach((key) => {\n        result += ((result.length) ? '&' : '?') + key + '=' + encodeURIComponent(params[key]);\n    });\n\n    return result;\n};\n\nexport default encodeGetQuery;\n","\nconst exists = function (src) {\n    return src !== undefined && src !== null;\n};\n\nexport default exists;\n","\n\nexport const extend = function (destination, source) {\n    for (let param in source)\n        if (source.hasOwnProperty(param))\n            destination[param] = source[param];\n\n    function __() {\n        this.constructor = destination;\n    }\n\n    __.prototype = source.prototype;\n    destination.prototype = new __();\n};\n\nexport const extendRecursive = function (destination, source) {\n    let property;\n    for (property in source) {\n        if (source[property] && source[property].constructor && source[property].constructor === Object) {\n            destination[property] = destination[property] || {};\n            extendRecursive(destination[property], source[property]);\n        } else\n            destination[property] = source[property];\n    }\n    return destination;\n};\n\nexport default extend;\n","/**\n *\n * @param {object|array} list\n * @param {string|number} attr\n * @param {*} attrValue\n * @returns {*[]}\n */\nconst finds = function (list, attr, attrValue) {\n    let i, tmp = [];\n    if (list && typeof list === \"object\")\n        list = Object.values(list);\n\n    if (Array.isArray(list))\n        for (i = 0; i < list.length; i++)\n            if (list[i] && list[i][attr] !== undefined && list[i][attr] === attrValue)\n                tmp.push(list[i]);\n\n    return tmp ;\n};\n\nfinds.many = function (values, attr, attrValue) {\n    let tmp = finds(values, attr, attrValue);\n    return tmp.length ? tmp : false;\n};\n\n\nfinds.one = function (values, attr, attrValue) {\n    let tmp = finds(values, attr, attrValue);\n    return tmp.length ? tmp[0] : false;\n};\n\nexport default finds;\n","\nimport isNode from \"./isNode\";\nimport defined from \"./defined\";\nimport node2str from \"./node2str\";\n\n\n/**\n * Formatting of string, or maybe template builder\n *\n * Examples:\n * .format(\"Hello {0}, your code is {1}!\", ['Jade', 'Prefect']);\n *\n * .format(\"Hello {name}, your code is {mean}!\", {name:'Jade', mean: 'Prefect'});\n *\n * @param string    String\n * @param list  Array|Object\n * @returns string\n */\nconst format = function (string, list) {\n    let reg;\n    if (Array.isArray(list))\n        reg = new RegExp(/{(\\d+)}/g);\n    else if (list && typeof list === 'object')\n        reg = new RegExp(/{(\\w+)}/g);\n\n    return string.replace(reg, function (match, number) {\n        if (defined(list[number]) && isNode(list[number]))\n            list[number] = node2str(list[number]);\n\n        return typeof list[number] !== undefined ? list[number] : match;\n    });\n};\n\nexport default format;\n","\nconst getDocument = function () {\n    if (document)\n        return document;\n    else\n        throw new Error('document object not exist!');\n};\n\nexport default getDocument;\n","\nconst getLocation = function () {\n    if (location)\n        return location;\n    else\n        throw new Error('location object not exist!');\n};\n\nexport default getLocation;\n","\nconst getWindow = function () {\n\n    if (typeof window !== 'undefined') {\n        return window;\n    } else {\n        // return global ? global : {};\n        throw new Error('window object not exist!');\n    }\n};\n\nexport default getWindow;\n","\nconst hasLowerCase = function (character) {\n    const lowers = character.split('').filter((char)=>{\n        let code = char.charCodeAt(0);\n        return code >= 65 && code <= 90;\n    });\n\n    return lowers.length > 0;\n};\n\nexport default hasLowerCase;\n","import typeOf from \"./typeOf\";\n\n/**\n * Base HTTP Request\n *\n * httpRequest( { url: '/index' }, function(status, data){}, thisInstance );\n *\n * httpRequest( { url: '/index', method: 'POST', data: DATA }, function(status, data){}, thisInstance );\n *\n * httpRequest(\n *  {\n *      method: 'POST',\n *      data: {},\n *      headers: {},\n *      action: '/index'\n *  },\n *  function(status, data){\n *      log(status);\n *  },\n *  thisInstance);\n *\n * @param config\n *      data:           data to send. Object, FormData (POST only), HTMLFormElement (POST only)\n *      action, url:    url address to\n *      method:         request method GET POST or custom methods, default 'GET'\n *      headers:        headers Object, key = value\n *      useEncode:      used url encoding, default TRUE. Boolean\n *      useFormData:    used FormData, default FALSE. Boolean\n *      async:          default TRUE. Boolean\n *      user:\n *      password:\n *\n * @param callback\n *      executing event - onloadend. function (status, responseText)\n *\n * @param thisInstance\n *      object 'this' for callback\n *\n * @returns {XMLHttpRequest}\n */\nconst httpRequest = function (config, callback, thisInstance) {\n    let key;\n    let sendData = {};\n    const xhr = new XMLHttpRequest();\n    const options = {\n        data: config.data || {},\n        action: config.action || config.url || document.location.href,\n        method: config.method ? config.method.toUpperCase() : 'GET',\n        headers: config.headers || {},\n        useEncode: config.useEncode === undefined ? true : !!config.useEncode,\n        useFormData: config.useFormData === undefined ? false : !!config.useFormData,\n        async: config.async === undefined ? true : !!config.async,\n        user: config.user || null,\n        password: config.user || null,\n    };\n\n    const concateString = function (params) {\n        let result = '';\n        for (key in params) {\n            result += '&' + key + '=' + (options.useEncode ? encodeURIComponent(params[key]) : params[key]);\n        }\n        return result;\n    };\n\n    thisInstance = (typeOf(thisInstance, 'object')) ? thisInstance : {};\n\n    // data prepare\n    if (options.method === 'GET') {\n\n        // form to FormData\n        options.action += options.action.indexOf('?') === -1 ? '?' : '';\n        options.action += concateString(options.data);\n        sendData = {};\n\n    } else {\n\n        // reset to useFormData in true\n        if (options.data instanceof FormData) {\n            options.data = {};\n            options.useFormData = true;\n            sendData = options.data;\n        }\n\n        // form to FormData\n        if (options.data instanceof HTMLFormElement) {\n            sendData = new FormData(options.data);\n            options.useFormData = true;\n            options.data = {};\n        }\n\n        if (options.useFormData) {\n            if (!(sendData instanceof FormData)) sendData = new FormData();\n\n            Object.keys(options.data).forEach((key) => {\n                sendData.append(key, options.useEncode ? encodeURIComponent(options.data[key]) : options.data[key]);\n            });\n\n        } else {\n            sendData = concateString(options.data);\n        }\n\n    }\n\n    // build request\n    xhr.open(options.method, options.action, options.async, options.user, options.password);\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    if (options.method !== 'GET' && !options.useFormData) {\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    for (key in options.headers) {\n        xhr.setRequestHeader(key, options.headers[key]);\n    }\n\n    xhr.onloadend = function () {\n        thisInstance.XMLHttpRequest = xhr;\n        if (typeof callback === 'function') {\n            callback.call(thisInstance, xhr.status, xhr.responseText, xhr);\n        }\n    };\n\n    xhr.sendOptions = options;\n    xhr.send(sendData);\n    return xhr;\n};\n\nexport default httpRequest;\n","import isNode from './isNode';\nimport typeOf from './typeOf';\nimport query from './query';\n\n/**\n * Ex:\n * inject ( '.content', \"lorem text\"  )\n * inject ( '.content', [\"text\",\"text\",\"text\"]  )\n * inject ( '.content', Node  )\n * inject ( '.content', [Node,Node,Node]  )\n *\n *\n * @param selector\n * @param data\n * @param {boolean} append\n * @param from\n * @returns {null|Node|boolean}\n */\nconst inject = function (selector, data, append, from)\n{\n    if (typeOf(selector, 'array')) {\n        selector.forEach((elem) => {\n            inject(elem, data, append, from);\n        });\n        return null;\n    }\n\n    if (typeOf(selector, 'string'))\n        selector = query(selector, from);\n\n    if (!append)\n        selector.textContent = '';\n\n    if (isNode(selector)) {\n        if (isNode(data)) {\n            selector.appendChild(data);\n        } else if (typeOf(data, 'array')) {\n            let i;\n            for (i = 0; i < data.length; i++)\n                inject(selector, data[i], true, from);\n        } else {\n            selector.innerHTML = (!append) ? data : selector.innerHTML + data;\n        }\n        return selector;\n    }\n    return null;\n};\n\nexport default inject;\n","\nconst isNumber = function (value) {\n    return typeof value === 'boolean';\n}\n\nexport default isNumber;\n","\nconst isDefined = function (src) {\n    return src !== undefined;\n};\n\nexport default isDefined;\n","import typeOf from \"./typeOf\";\n\n\nconst isEmpty = function (src) {\n    if (typeOf(src, 'object') || typeOf(src, 'array')) {\n        for (let key in src)\n            if (src.hasOwnProperty(key))\n                return false;\n        return true;\n    } else if (typeOf(src, 'string')) {\n        src = src.replace(/\\s/g, '');\n        return src === \"\" || src === \"0\";\n    } else {\n        return (src === 0 || src === null || src === undefined || src === false || isNaN(src));\n    }\n};\n\nexport default isEmpty;\n","\nconst isEqualArrays = function (arr1, arr2) {\n    if (arr1 === arr2)\n        return true;\n\n    else if (!Array.isArray(arr1) || !Array.isArray(arr2) || arr1.length !== arr2.length)\n        return false;\n\n    for (let i = 0; i < arr1.length; ++i)\n        if (arr1[i] !== arr2[i])\n            return false;\n\n    return true;\n};\n\nexport default isEqualArrays;\n","\nconst isNumber = function (value) {\n    return typeof value === 'function';\n}\n\nexport default isNumber;\n","// import DOMParser from 'DOMParser';\n\nconst isHTMLString = function (value, truest = false) {\n\n    if (truest) {\n        const div = document.createElement('div');\n        div.innerHTML = value;\n        return !!div.childElementCount;\n    }\n\n    return value.trim().substring(0, 1) === '<';\n};\n\nexport default isHTMLString;\n","\nconst isInteger = function (val) {\nreturn typeof val === 'number' && isFinite(val) && Math.floor(val) === val;\n}\n\nexport default isInteger;\n","\nconst isLowerCase = function (character) {\n    return character === character.toLowerCase() /*&& character !== character.toUpperCase()*/;\n};\n\nconst isLowerCase2 = function (character) {\n    let code = character.charCodeAt(0);\n    return code >= 97 && code <= 122;\n};\n\nexport default isLowerCase;","\n\nconst isNode = function (value) {\n    return value && (value.nodeType === Node.TEXT_NODE ||\n        value.nodeType === Node.ELEMENT_NODE ||\n        value.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n        value.nodeType === Node.DOCUMENT_NODE)\n};\n\nexport default isNode;\n","\nconst isNumber = function (value) {\n    try {\n        value = parseInt(value);\n        return (typeof value === 'number' || value instanceof Number) && !isNaN(value);\n    } catch (err) {\n        return false;\n    }\n}\nexport default isNumber;\n","import isEmpty from \"./isEmpty\";\n\nconst isObject = function (value) {\n    return typeof value === 'object' &&\n        !isEmpty(value) &&\n        !Array.isArray(value) &&\n        !(value instanceof RegExp) &&\n        !(value instanceof String) &&\n        !(value instanceof Number);\n}\n\nexport default isObject;\n","\nconst isRegExp = function (val) {\n    return Object.prototype.toString.call(val) === '[object RegExp]';\n}\n\nexport default isRegExp;\n","\nconst isString = function (value) {\n    return typeof value === 'string' || value instanceof String;\n};\n\nexport default isString;\n","\nconst isUpperCase = function (character) {\n    return character === character.toUpperCase() /*&& character !== character.toLowerCase()*/;\n};\n\nconst isUpperCase2 = function (character) {\n    let code = character.charCodeAt(0);\n    return code >= 65 && code <= 90;\n};\n\nexport default isUpperCase;","\nconst loadBlobfile = function (src, onload, onerror) {\n    fetch(src)\n        .then(response => response.blob())\n        .then(blob => onload(blob))\n        .catch(error => typeof onerror === 'function' ? onerror(error) : null);\n};\n\nexport default loadBlobfile;","import typeOf from \"./typeOf\";\nimport getDocument from \"./getDocument\";\n\nconst loadCSS = function (src, onload, onerror) {\n    if (!src) return null;\n    if (typeOf(src, 'array')) {\n        for (let i = 0; i < src.length; i++) {\n            loadCSS(src[i], onload, onerror);\n        }\n    } else {\n        const doc = getDocument();\n        const link = doc.createElement('link');\n        const id = \"src-\" + Math.random().toString(32).slice(2);\n\n        link.href = (src.substr(-4) === '.css') ? src : src + '.css';\n        link.rel = 'stylesheet';\n        link.id = id;\n        link.onload = onload;\n        link.onerror = onerror;\n\n        doc.head.appendChild(link);\n        return link\n    }\n};\n\nexport default loadCSS;\n","import typeOf from \"./typeOf\";\nimport getDocument from \"./getDocument\";\n\nconst documentElement = getDocument();\nconst loadJS = function (src, onload, onerror) {\n    if (!src) return null;\n    if (typeOf(src, 'array')) {\n        for (let i = 0; i < src.length; i++) {\n            loadJS(src[i], onload, onerror);\n        }\n    } else {\n        const script = documentElement.createElement('script');\n        const id = 'resource-' + Math.random().toString(32).slice(2);\n\n        script.src = (src.substr(-3) === '.js') ? src : src + '.js';\n        script.type = 'application/javascript';\n        script.id = id;\n        script.onload = onload;\n        script.onerror = onerror;\n\n        documentElement.head.appendChild(script);\n        return script\n    }\n};\n\nexport default loadJS;","\nconst loadJSON = function (src, onload, onerror) {\n    fetch(src)\n        .then(response => response.json())\n        .then(json => onload(json))\n        .catch(error => typeof onerror === 'function' ? onerror(error) : null);\n};\n\nexport default loadJSON;","\nimport typeOf from \"./typeOf\";\nimport createElement from \"./createElement\";\n\n/**\n * Loads a script element with javascript source\n *\n * .loadJSSync ( {\n *      myscript1: '/path/to/myscript1',\n *      myscript2: '/path/to/myscript2',\n *    },\n *    function (list) {})\n *\n * .loadJSSync ( [\n *      '/path/to/myscript1',\n *      '/path/to/myscript2',\n *    ],\n *    function (list) {})\n *\n * @namespace NamespaceApplication.loadJSSync\n * @param srcs       Object, Array. items: key is ID, value is src\n * @param callback  Function called when all srcs is loaded\n * @param onerror   Function called when load is failed\n * @returns {*}\n */\nconst loadJSSync = function (srcs, callback, onerror) {\n    if (typeOf(srcs, 'object') || typeOf(srcs, 'array')) {\n        if (typeOf(srcs, 'array')) {\n            const obj = {};\n            srcs.forEach( (item, i) => {\n                obj['resource-' + Math.random().toString(32).slice(2)] = item\n            });\n            srcs = obj;\n        }\n        let iterator = 0;\n        const scripts = {};\n        Object.keys(srcs).forEach((key) => {\n            const src = srcs[key];\n            const script = createElement('script', {\n                src: (src.substr(-3) === '.js') ? src : src + '.js',\n                type: 'application/javascript',\n                id: key,\n            });\n            script.onerror = onerror;\n            script.onload = function (e) {\n                scripts[this.id] = this;\n                iterator ++;\n                if (iterator === length) {\n                    callback.call({}, scripts);\n                }\n            };\n            document.head.appendChild(script);\n        })\n    }\n};\n\nexport default loadJSSync;\n","\nconst max = function (arr) {\n    return Math.max.apply({}, arr);\n}\n\nexport default max;","\n\n/**\n *\n * @param object1 base\n * @param object2\n * @returns {*}\n */\nconst merge = (object1, object2) => {\n    for (let key in object2) {\n        try {\n            if ( object2[key].constructor === Object ) {\n                object1[key] = merge(object1[key], object2[key]);\n            } else {\n                object1[key] = object2[key];\n            }\n        } catch(e) {\n            object1[key] = object2[key];\n\n        }\n    }\n    return object1;\n};\n\nexport default merge;\n","const middleNumber = function (numbers) {\n    const min = Math.min(...numbers)\n    return (Math.max(...numbers) - min) / 2 + min;\n}\n\nexport default middleNumber;\n","\nconst min = function (arr) {\n    return Math.min.apply({}, arr);\n}\n\nexport default min;","\n\nconst node2str =  function (element) {\n    const container = document.createElement(\"div\");\n    container.appendChild(element.cloneNode(true));\n    return container.innerHTML;\n};\n\nexport default node2str;\n","\nexport const number2string = function (x) {\n    let e;\n    if (Math.abs(x) < 1.0) {\n        e = parseInt(x.toString().split('e-')[1]);\n        if (e) {\n            x *= Math.pow(10,e-1);\n            x = '0.' + (new Array(e)).join('0') + x.toString().substring(2);\n        }\n    } else {\n        e = parseInt(x.toString().split('+')[1]);\n        if (e > 20) {\n            e -= 20;\n            x /= Math.pow(10,e);\n            x += (new Array(e+1)).join('0');\n        }\n    }\n    return x;\n};\n\nexport default number2string;\n","import queryAll from './queryAll';\nimport typeOf from './typeOf';\nimport isNode from './isNode';\n\n/**\n *\n * @param {*|string|Element} selector\n * @param {string} eventName\n * @param {function} callback\n * @param {boolean} bubble\n */\nconst on = function (selector, eventName, callback, bubble) {\n    let i, elements = [];\n\n    switch (typeOf(selector)) {\n        case 'string':\n            elements = queryAll(selector);\n            break;\n        case 'object':\n            if (isNode(selector))\n                elements = [selector];\n            break;\n        case 'array':\n            elements = selector;\n            break;\n    }\n\n    for (i = 0; i < elements.length; i++) {\n        if (elements[i] && elements[i].addEventListener)\n            elements[i].addEventListener(eventName, callback, !!bubble);\n    }\n};\n\nexport default on;\n","// import isNode from \"./isNode\";\n\n\nconst position = function (elem) {\n    const data = {x: 0, y: 0, width: 0, height: 0};\n    if (typeof elem === 'string')\n        elem = document.querySelector(elem);\n\n    if (elem === window || elem === document) {\n        data.width = window.innerWidth;\n        data.height = window.innerHeight;\n        data.element = window;\n    }\n    else\n    if (elem && elem.nodeType === Node.ELEMENT_NODE) {\n        if (elem.getBoundingClientRect) {\n            const rect = elem.getBoundingClientRect();\n            let scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop,\n                scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,\n                clientTop = document.documentElement.clientTop || document.body.clientTop || 0,\n                clientLeft = document.documentElement.clientLeft || document.body.clientLeft || 0;\n\n            data.y = Math.round(rect.top + scrollTop - clientTop);\n            data.x = Math.round(rect.left + scrollLeft - clientLeft);\n            data.width = elem.offsetWidth;\n            data.height = elem.offsetHeight;\n\n            data.top = rect.top + pageYOffset;\n            data.left = rect.left + pageXOffset;\n            data.right = rect.right + pageXOffset;\n            data.bottom = rect.bottom + pageXOffset;\n        }\n        else {\n            let top = 0, left = 0;\n            while (elem) {\n                top += parseInt(elem.offsetTop, 10);\n                left += parseInt(elem.offsetLeft, 10);\n                elem = elem.offsetParent;\n            }\n            data.y = top;\n            data.x = left;\n            data.width = elem.offsetWidth;\n            data.height = elem.offsetHeight;\n        }\n        data.element = elem;\n    }\n    return data;\n};\n\nexport default position;\n","\n\nconst positionMouse = function (event) {\n    if (!(event instanceof MouseEvent)) {\n        console.error('Error: argument is not type the MouseEvent!');\n        return;\n    }\n    const rect = document.body.getBoundingClientRect();\n    return {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n    };\n};\n\nexport default positionMouse;\n","import queryAll from './queryAll';\n\n/**\n *\n * @param selector\n * @param from\n * @param callback\n * @param thisInstance\n * @returns {Node|boolean}\n */\nconst query = function (selector, from, callback, thisInstance) {\n    const elements = queryAll(selector, from, callback, thisInstance);\n    return elements && elements[0] ? elements[0] : false;\n};\n\nexport default query;\n","import isNode from './isNode';\nimport typeOf from './typeOf';\nimport getDocument from './getDocument';\n\nconst doc = getDocument();\n\n/**\n *\n * node = queryAll( '.sidebar' );\n * node = queryAll( '.sidebar', '.left' );\n * node = queryAll( '.sidebar', '.left', (elem) => {console.log(elem)} );\n * node = queryAll( '.sidebar', '.left', (elem) => {console.log(elem)}, DATA_OBJECT );\n *\n * @param {string|Element} selector\n * @param {string|Element} from\n * @param {function} callback\n * @param {object} thisInstance\n * @returns {*[]}\n */\nconst queryAll = function (selector, from, callback, thisInstance) {\n    let elements = [];\n    from = from || doc;\n\n    if (isNode(selector))\n        return [selector];\n\n    if (typeOf(from, 'string'))\n        from = doc.querySelector(from);\n    if (from)\n        elements = [].slice.call(from.querySelectorAll(selector));\n\n    if (callback)\n        elements.forEach((element) => {callback.call(thisInstance || {}, element)});\n\n    return elements;\n};\n\nexport default queryAll;\n","\n/**\n * Convert radians to degrees\n * Formula: radians * 180 / Math.PI\n * @param rad\n * @returns {number}\n */\nconst radiansToDegrees = function (rad) {\n    return (rad * 180) / Math.PI;\n};\n\nexport default radiansToDegrees;\n","/**\n * Generate a random number\n * @param min\n * @param max\n * @returns {number}\n */\nimport {ABC, NUMBERS} from \"./abc\";\n\n\nexport const random = function (min, max) {\n    min = min || 0;\n    max = max || 100;\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\n/**\n * Generate a random hex color\n * @returns {string}\n */\nexport const randomColor = function () {\n    const letters = '0123456789ABCDEF'.split('');\n    let i, color = '#';\n    for (i = 0; i < 6; i++)\n        color += letters[Math.floor(Math.random() * 16)];\n    return color;\n};\nrandom.color = randomColor;\n\n/**\n *\n * @param size\n * @returns {string|number}\n */\nexport const randomNumber = function (size = 6) {\n    if (size > 16) {\n        let i = Math.ceil(size/16);\n        let res = '';\n        for (i; i > 0; i--)\n            res += Array(16).fill(0).map(i => Math.floor(Math.random() * 10)).join('');\n        return res.slice(0, size);\n    }\n    return parseInt(Array(size).fill(0).map(i => Math.floor(Math.random() * 10)).join(''));\n};\nrandom.number = randomNumber;\n\n/**\n *\n * @param size\n * @returns {string}\n */\nexport const randomString = function (size = 6) {\n    let i, string = '';\n    const abs = (ABC + NUMBERS).toLowerCase().split('');\n    for (i = size; i > 0; i--) {\n        string +=\n            abs[Math.floor(Math.random() * abs.length)];\n    }\n    return string;\n};\nrandom.string = randomString;\n\n/**\n * Return random item from array\n * @param arr\n * @returns {*}\n */\nexport const randomItem = function (arr) {\n    return Array.isArray(arr) ? arr[random(0, arr.length-1)] : false;\n};\nrandom.item = randomItem;\n\n\nexport default random;","\nconst range = function (start, end, step = 1) {\n    const allNumbers = [start, end, step].every(Number.isFinite);\n\n    if (!allNumbers)\n        throw new TypeError('range() expects only finite numbers as arguments.');\n\n    if (step <= 0)\n        throw new Error('step must be a number greater than 0.');\n\n    if (start > end)\n        step = -step;\n\n    const length = Math.floor(Math.abs((end - start) / step)) + 1;\n    return Array.from(Array(length), (x, index) => start + index * step);\n};\n\n\nexport default range;\n","import getLocation from \"./getLocation\";\nimport getDocument from \"./getDocument\";\n\n\nconst redirect = function (to) {\n    const loc = getLocation();\n    const doc = getDocument();\n    loc.href = to || doc.href;\n};\n\nexport default redirect;\n","import isNode from './isNode';\nimport queryAll from './queryAll';\nimport query from './query';\n\n/**\n * ```\n *  <div data-on=\"open\">open</div>\n *  <div data-on=\"close\">close</div>\n *\n *  const onNodes = search('[data-on]', 'data-on')\n *\n *  // onNodes\n *  {\n *      open: Node,\n *      close: Node\n *  }\n * ```\n *\n *\n * @param selector\n * @param attr\n * @param from\n * @return {{}}\n */\nconst search = function (selector, attr, from) {\n    from = isNode(from) ? from : query(from);\n    let i = 0,\n        key,\n        elements = {},\n        queryElements = queryAll(selector, from || document.body);\n\n    if (queryElements) {\n        while (i < queryElements.length) {\n            if (!attr)\n                elements[i] = queryElements[i];\n            else {\n                if (queryElements[i].hasAttribute(attr)) {\n                    key = queryElements[i].getAttribute(attr);\n                    elements[key] = queryElements[i];\n                }\n            }\n            i++;\n        }\n    }\n    return elements;\n};\n\nexport default search;\n","\n\nconst shuffleArray = function (array) {\n    let i, j, temp;\n    for (i = array.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n};\n\nexport default shuffleArray;\n","/**\n * Examples:\n * .sprintf(\"Hello {0} my friend, i am {1}\", \"Mr.Morrison\", \"John\")\n * @param string\n * @param args\n * @returns {void|*}\n */\nconst sprintf = function (string, ...args) {\n    return string.replace(/{(\\d+)}/g, function(match, number) {\n        return typeof args[number] != 'undefined'\n            ? args[number]\n            : match\n            ;\n    });\n};\n\nexport default sprintf;\n","\nconst str2fragment = function (string) {\n    if (document.createRange)\n        return document.createRange().createContextualFragment(string);\n    else {\n        let i,\n            fragment = document.createDocumentFragment(),\n            container = document.createElement(\"div\");\n\n        container.innerHTML = string;\n        while (i = container.firstChild)\n            fragment.appendChild(i);\n\n        return fragment;\n    }\n};\n\nexport default str2fragment;\n","import str2fragment from \"./str2fragment\";\n\nconst str2node = function (string) {\n    let result;\n    let fragment = str2fragment(string);\n\n    switch (fragment.childElementCount) {\n        case 0: break;\n        case 1:\n            result = fragment.firstElementChild;\n            break;\n        default:\n            let container = document.createElement(\"span\");\n            container.appendChild(fragment);\n            result = container;\n    }\n    return result;\n};\n\nexport default str2node;\n","\nconst stylizer = function (element, styles) {\n    Object.keys(styles).forEach((key) => {\n        if (element.style[key] !== undefined) {\n            element.style[key] = styles[key];\n        }\n    });\n};\n\nexport default stylizer;\n","\nconst sum = function (arr) {\n    const parse = v => isNaN(v) ? 0 : v;\n    return arr.reduce((acc, value) => parse(acc) + parse(value), 0);\n    // arr.reduce(function(acc, value) { return acc + value; }, 0)\n}\n\nexport default sum;","/**\n * toArray ( $var, { values: true })\n *\n * options\n *    values - gets values of object to new array values\n *\n * @param entries\n * @param options\n * @return {[]}\n */\nconst toArray = function (entries, options = {}) {\n  const values = options.hasOwnProperty('values') ? options.values : true;\n\n  const type = typeof entries;\n  let data = [];\n\n  switch (type) {\n    case 'object':\n      if (entries) {\n        if (Array.isArray(entries)) {\n          data = Array.apply([], entries);\n        } else {\n          data = values\n            ? Object.values(entries).map((key, index) => key)\n            : Object.keys(entries).map((key, index) => key);\n        }\n      }\n      break;\n\n    case 'string':\n    case 'number':\n    case 'boolean':\n    case 'function':\n      data.push(entries)\n      break;\n  }\n\n  return data;\n};\n\nexport default toArray;\n","\nconst toCamelCase = function (characters) {\n    const indexes = [];\n    let string = characters.replace(/[_]/g, function (letter, index) {\n        indexes.push(index - indexes.length);\n        return '';\n    });\n    indexes.forEach((index)=>{\n        const start = string.substring(0, index);\n        const replace = string.substr(index,1).toUpperCase();\n        const end = string.substring(index + 1);\n        string = start + replace + end;\n    });\n    return string;\n};\n\nexport default toCamelCase;","/**\n * toMap( { '1': 5, '2': 7, '3': 0 } )\n * result [ [ 1, 5 ], [ 2, 7 ], [ 3, 0 ] ]\n *\n * @param entries\n * @return {[number, *][]}\n */\nconst toMap = function (entries) {\n  return Object.keys(entries).map((key) => [Number(key), entries[key]]);\n};\n\nexport default toMap;\n","\nconst toMinusCase = function (characters) {\n    return characters.replace(/[A-Z]/g, function (letter, index) {\n        return index === 0 ? letter.toLowerCase() : '-' + letter.toLowerCase();\n    });\n};\n\nexport default toMinusCase;","\nconst toObject = function (value) {\n    return (typeof value === 'object')\n        ? JSON.parse(JSON.stringify(value))\n        : {};\n}\n\nexport default toObject;\n","\nconst toSnakeCase = function (characters) {\n    return characters.replace(/[A-Z]/g, function (letter, index) {\n        return index === 0 ? letter.toLowerCase() : '_' + letter.toLowerCase();\n    });\n    /*        return characters.split('').map((character, index) => {\n                if (character === character.toUpperCase()) {\n                    return (index > 0 ? '_':'') + character.toLowerCase();\n                } else {\n                    return character;\n                }\n            }).join('');*/\n};\n\nexport default toSnakeCase;","\n/**\n * @deprecated use `str2node` or `str2fragment`\n *\n * @param value\n * @returns {boolean|Element}\n */\nconst toXML = function (value) {\n    if (value) {\n        const type = 'text/xml';\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(value, type);\n\n        if (xmlDoc.documentElement && xmlDoc.documentElement.tagName !== 'html') {\n            return xmlDoc.documentElement;\n        }\n        return false;\n    }\n    return false;\n}\n\nexport default toXML;\n","\n\nconst trim = function(str) {\n    return str.replace(/^\\s+|\\s+$/gm,'');\n};\n\nexport default trim;\n","\nconst trimSymbols = function (str, charlist) {\n    let whitespace = [\n        ' ',\n        '\\n',\n        '\\r',\n        '\\t',\n        '\\f',\n        '\\x0b',\n        '\\xa0',\n        '\\u2000',\n        '\\u2001',\n        '\\u2002',\n        '\\u2003',\n        '\\u2004',\n        '\\u2005',\n        '\\u2006',\n        '\\u2007',\n        '\\u2008',\n        '\\u2009',\n        '\\u200a',\n        '\\u200b',\n        '\\u2028',\n        '\\u2029',\n        '\\u3000'\n    ].join('')\n    let l = 0\n    let i = 0\n    str += ''\n    if (charlist) {\n        whitespace = (charlist + '').replace(/([[\\]().?/*{}+$^:])/g, '$1')\n    }\n    l = str.length\n    for (i = 0; i < l; i++) {\n        if (whitespace.indexOf(str.charAt(i)) === -1) {\n            str = str.substring(i)\n            break\n        }\n    }\n    l = str.length\n    for (i = l - 1; i >= 0; i--) {\n        if (whitespace.indexOf(str.charAt(i)) === -1) {\n            str = str.substring(0, i + 1)\n            break\n        }\n    }\n    return whitespace.indexOf(str.charAt(0)) === -1 ? str : ''\n}\n\nexport default trimSymbols;\n","import typeOfStrict from \"./typeOfStrict\";\n\n// typeOf({}            )     - object\n// typeOf({1:10,2:20}   )     - object\n// typeOf([]            )     - array\n// typeOf(null          )     - null\n// typeOf(''            )     - string\n// typeOf(100           )     - number\n// typeOf(undefined     )     - undefined\n// typeOf(true          )     - boolean\n// typeOf(()=>{}        )     - function\n\n/**\n * typeOf(VAR) // return string type\n * typeOf(VAR, 'string') // return boolean\n *\n * @param {*|string|object|boolean}value\n * @param {string|null} type\n * @return {boolean|string}\n */\nconst typeOf = function (value, type= null) {\n    const simpleTypes = ['null', 'boolean', 'undefined', 'function', 'string', 'number', 'date', 'array', 'object'];\n    let t = typeOfStrict(value).toLowerCase();\n    if (simpleTypes.indexOf(t) === -1 && typeof value === 'object')\n        t = 'object';\n\n    return typeof type === 'string' ?\n        type.toLowerCase() === t : t;\n};\n\nexport default typeOf;\n","// typeof {}            - object\n// typeof {1:10,2:20}   - object\n// typeof []            - object\n// typeof null          - object\n// typeof ''            - string\n// typeof 100           - number\n// typeof undefined     - undefined\n// typeof true          - boolean\n// typeof ()=>{}        - function\n\n// typeOfStrict({}            )        - Object\n// typeOfStrict({1:10,2:20}   )        - Object\n// typeOfStrict([]            )        - Array\n// typeOfStrict(null          )        - Null\n// typeOfStrict(''            )        - String\n// typeOfStrict(100           )        - Number\n// typeOfStrict(undefined     )        - Undefined\n// typeOfStrict(true          )        - Boolean\n// typeOfStrict(()=>{}        )        - Function\n/**\n *\n * @param value\n * @param type\n * @return {boolean|string}\n */\nconst typeOfStrict = function (value, type) {\n    const t = Object.prototype.toString.call(value).slice(8, -1);\n    return typeof type === 'string' ? type === t : t;\n};\n\nexport default typeOfStrict;\n","\nconst uniqArray = function (value, index, self) {\n    return self.indexOf(value) === index;\n};\n\nexport default uniqArray;\n","import getLocation from \"./getLocation\";\n\n\nconst uri = function (uri) {\n    const loc = getLocation();\n    uri = uri || loc.pathname;\n    uri = uri.replace(/\\/+/ig, '/');\n    return uri.length > 1 && uri.slice(0, 1) !== '/' ? '/' + uri : uri;\n};\n\nexport default uri;\n","\nconst values = function (obj) {\n    if (Object.values) {\n        return Object.values(obj);\n    }\n\n    const keys = Object.keys(obj);\n    const length = keys.length;\n    const values = new Array(length);\n\n    for (let i = 0; i < length; i++) {\n        values[i] = obj[keys[i]];\n    }\n\n    return values;\n};\n\nexport default values;\n","\n\n/**\n * wait({}, (resolve, reject) => resolve() );\n *\n * @param args\n * @param callback\n * @returns {Promise<any>}\n */\nconst wait = function (args, callback) {\n    return new Promise((resolve, reject) => {\n        callback.bind(args)(resolve, reject);\n    })\n};\n\nexport default wait;\n"],"sourceRoot":""}